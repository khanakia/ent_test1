// Code generated by ent, DO NOT EDIT.

package media

import (
	"saas/gen/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldID, id))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAppID, v))
}

// Disk applies equality check predicate on the "disk" field. It's identical to DiskEQ.
func Disk(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDisk, v))
}

// Directory applies equality check predicate on the "directory" field. It's identical to DirectoryEQ.
func Directory(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDirectory, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldName, v))
}

// OriginalName applies equality check predicate on the "original_name" field. It's identical to OriginalNameEQ.
func OriginalName(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOriginalName, v))
}

// Extension applies equality check predicate on the "extension" field. It's identical to ExtensionEQ.
func Extension(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldExtension, v))
}

// MimeType applies equality check predicate on the "mime_type" field. It's identical to MimeTypeEQ.
func MimeType(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldMimeType, v))
}

// AggregateType applies equality check predicate on the "aggregate_type" field. It's identical to AggregateTypeEQ.
func AggregateType(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAggregateType, v))
}

// Size applies equality check predicate on the "size" field. It's identical to SizeEQ.
func Size(v uint) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldSize, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDescription, v))
}

// IsVariant applies equality check predicate on the "is_variant" field. It's identical to IsVariantEQ.
func IsVariant(v bool) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldIsVariant, v))
}

// VariantName applies equality check predicate on the "variant_name" field. It's identical to VariantNameEQ.
func VariantName(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldVariantName, v))
}

// OriginalMediaID applies equality check predicate on the "original_media_id" field. It's identical to OriginalMediaIDEQ.
func OriginalMediaID(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOriginalMediaID, v))
}

// Checksum applies equality check predicate on the "checksum" field. It's identical to ChecksumEQ.
func Checksum(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldChecksum, v))
}

// WorkspaceID applies equality check predicate on the "workspace_id" field. It's identical to WorkspaceIDEQ.
func WorkspaceID(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldWorkspaceID, v))
}

// Alt applies equality check predicate on the "alt" field. It's identical to AltEQ.
func Alt(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAlt, v))
}

// UID applies equality check predicate on the "uid" field. It's identical to UIDEQ.
func UID(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldUID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v bool) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldStatus, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldAppID, v))
}

// AppIDContains applies the Contains predicate on the "app_id" field.
func AppIDContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldAppID, v))
}

// AppIDHasPrefix applies the HasPrefix predicate on the "app_id" field.
func AppIDHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldAppID, v))
}

// AppIDHasSuffix applies the HasSuffix predicate on the "app_id" field.
func AppIDHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldAppID))
}

// AppIDEqualFold applies the EqualFold predicate on the "app_id" field.
func AppIDEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldAppID, v))
}

// AppIDContainsFold applies the ContainsFold predicate on the "app_id" field.
func AppIDContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldAppID, v))
}

// DiskEQ applies the EQ predicate on the "disk" field.
func DiskEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDisk, v))
}

// DiskNEQ applies the NEQ predicate on the "disk" field.
func DiskNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldDisk, v))
}

// DiskIn applies the In predicate on the "disk" field.
func DiskIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldDisk, vs...))
}

// DiskNotIn applies the NotIn predicate on the "disk" field.
func DiskNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldDisk, vs...))
}

// DiskGT applies the GT predicate on the "disk" field.
func DiskGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldDisk, v))
}

// DiskGTE applies the GTE predicate on the "disk" field.
func DiskGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldDisk, v))
}

// DiskLT applies the LT predicate on the "disk" field.
func DiskLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldDisk, v))
}

// DiskLTE applies the LTE predicate on the "disk" field.
func DiskLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldDisk, v))
}

// DiskContains applies the Contains predicate on the "disk" field.
func DiskContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldDisk, v))
}

// DiskHasPrefix applies the HasPrefix predicate on the "disk" field.
func DiskHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldDisk, v))
}

// DiskHasSuffix applies the HasSuffix predicate on the "disk" field.
func DiskHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldDisk, v))
}

// DiskIsNil applies the IsNil predicate on the "disk" field.
func DiskIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldDisk))
}

// DiskNotNil applies the NotNil predicate on the "disk" field.
func DiskNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldDisk))
}

// DiskEqualFold applies the EqualFold predicate on the "disk" field.
func DiskEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldDisk, v))
}

// DiskContainsFold applies the ContainsFold predicate on the "disk" field.
func DiskContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldDisk, v))
}

// DirectoryEQ applies the EQ predicate on the "directory" field.
func DirectoryEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDirectory, v))
}

// DirectoryNEQ applies the NEQ predicate on the "directory" field.
func DirectoryNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldDirectory, v))
}

// DirectoryIn applies the In predicate on the "directory" field.
func DirectoryIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldDirectory, vs...))
}

// DirectoryNotIn applies the NotIn predicate on the "directory" field.
func DirectoryNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldDirectory, vs...))
}

// DirectoryGT applies the GT predicate on the "directory" field.
func DirectoryGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldDirectory, v))
}

// DirectoryGTE applies the GTE predicate on the "directory" field.
func DirectoryGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldDirectory, v))
}

// DirectoryLT applies the LT predicate on the "directory" field.
func DirectoryLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldDirectory, v))
}

// DirectoryLTE applies the LTE predicate on the "directory" field.
func DirectoryLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldDirectory, v))
}

// DirectoryContains applies the Contains predicate on the "directory" field.
func DirectoryContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldDirectory, v))
}

// DirectoryHasPrefix applies the HasPrefix predicate on the "directory" field.
func DirectoryHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldDirectory, v))
}

// DirectoryHasSuffix applies the HasSuffix predicate on the "directory" field.
func DirectoryHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldDirectory, v))
}

// DirectoryIsNil applies the IsNil predicate on the "directory" field.
func DirectoryIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldDirectory))
}

// DirectoryNotNil applies the NotNil predicate on the "directory" field.
func DirectoryNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldDirectory))
}

// DirectoryEqualFold applies the EqualFold predicate on the "directory" field.
func DirectoryEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldDirectory, v))
}

// DirectoryContainsFold applies the ContainsFold predicate on the "directory" field.
func DirectoryContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldDirectory, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldName, v))
}

// OriginalNameEQ applies the EQ predicate on the "original_name" field.
func OriginalNameEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOriginalName, v))
}

// OriginalNameNEQ applies the NEQ predicate on the "original_name" field.
func OriginalNameNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldOriginalName, v))
}

// OriginalNameIn applies the In predicate on the "original_name" field.
func OriginalNameIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldOriginalName, vs...))
}

// OriginalNameNotIn applies the NotIn predicate on the "original_name" field.
func OriginalNameNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldOriginalName, vs...))
}

// OriginalNameGT applies the GT predicate on the "original_name" field.
func OriginalNameGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldOriginalName, v))
}

// OriginalNameGTE applies the GTE predicate on the "original_name" field.
func OriginalNameGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldOriginalName, v))
}

// OriginalNameLT applies the LT predicate on the "original_name" field.
func OriginalNameLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldOriginalName, v))
}

// OriginalNameLTE applies the LTE predicate on the "original_name" field.
func OriginalNameLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldOriginalName, v))
}

// OriginalNameContains applies the Contains predicate on the "original_name" field.
func OriginalNameContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldOriginalName, v))
}

// OriginalNameHasPrefix applies the HasPrefix predicate on the "original_name" field.
func OriginalNameHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldOriginalName, v))
}

// OriginalNameHasSuffix applies the HasSuffix predicate on the "original_name" field.
func OriginalNameHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldOriginalName, v))
}

// OriginalNameIsNil applies the IsNil predicate on the "original_name" field.
func OriginalNameIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldOriginalName))
}

// OriginalNameNotNil applies the NotNil predicate on the "original_name" field.
func OriginalNameNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldOriginalName))
}

// OriginalNameEqualFold applies the EqualFold predicate on the "original_name" field.
func OriginalNameEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldOriginalName, v))
}

// OriginalNameContainsFold applies the ContainsFold predicate on the "original_name" field.
func OriginalNameContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldOriginalName, v))
}

// ExtensionEQ applies the EQ predicate on the "extension" field.
func ExtensionEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldExtension, v))
}

// ExtensionNEQ applies the NEQ predicate on the "extension" field.
func ExtensionNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldExtension, v))
}

// ExtensionIn applies the In predicate on the "extension" field.
func ExtensionIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldExtension, vs...))
}

// ExtensionNotIn applies the NotIn predicate on the "extension" field.
func ExtensionNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldExtension, vs...))
}

// ExtensionGT applies the GT predicate on the "extension" field.
func ExtensionGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldExtension, v))
}

// ExtensionGTE applies the GTE predicate on the "extension" field.
func ExtensionGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldExtension, v))
}

// ExtensionLT applies the LT predicate on the "extension" field.
func ExtensionLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldExtension, v))
}

// ExtensionLTE applies the LTE predicate on the "extension" field.
func ExtensionLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldExtension, v))
}

// ExtensionContains applies the Contains predicate on the "extension" field.
func ExtensionContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldExtension, v))
}

// ExtensionHasPrefix applies the HasPrefix predicate on the "extension" field.
func ExtensionHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldExtension, v))
}

// ExtensionHasSuffix applies the HasSuffix predicate on the "extension" field.
func ExtensionHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldExtension, v))
}

// ExtensionIsNil applies the IsNil predicate on the "extension" field.
func ExtensionIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldExtension))
}

// ExtensionNotNil applies the NotNil predicate on the "extension" field.
func ExtensionNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldExtension))
}

// ExtensionEqualFold applies the EqualFold predicate on the "extension" field.
func ExtensionEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldExtension, v))
}

// ExtensionContainsFold applies the ContainsFold predicate on the "extension" field.
func ExtensionContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldExtension, v))
}

// MimeTypeEQ applies the EQ predicate on the "mime_type" field.
func MimeTypeEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldMimeType, v))
}

// MimeTypeNEQ applies the NEQ predicate on the "mime_type" field.
func MimeTypeNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldMimeType, v))
}

// MimeTypeIn applies the In predicate on the "mime_type" field.
func MimeTypeIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldMimeType, vs...))
}

// MimeTypeNotIn applies the NotIn predicate on the "mime_type" field.
func MimeTypeNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldMimeType, vs...))
}

// MimeTypeGT applies the GT predicate on the "mime_type" field.
func MimeTypeGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldMimeType, v))
}

// MimeTypeGTE applies the GTE predicate on the "mime_type" field.
func MimeTypeGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldMimeType, v))
}

// MimeTypeLT applies the LT predicate on the "mime_type" field.
func MimeTypeLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldMimeType, v))
}

// MimeTypeLTE applies the LTE predicate on the "mime_type" field.
func MimeTypeLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldMimeType, v))
}

// MimeTypeContains applies the Contains predicate on the "mime_type" field.
func MimeTypeContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldMimeType, v))
}

// MimeTypeHasPrefix applies the HasPrefix predicate on the "mime_type" field.
func MimeTypeHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldMimeType, v))
}

// MimeTypeHasSuffix applies the HasSuffix predicate on the "mime_type" field.
func MimeTypeHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldMimeType, v))
}

// MimeTypeIsNil applies the IsNil predicate on the "mime_type" field.
func MimeTypeIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldMimeType))
}

// MimeTypeNotNil applies the NotNil predicate on the "mime_type" field.
func MimeTypeNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldMimeType))
}

// MimeTypeEqualFold applies the EqualFold predicate on the "mime_type" field.
func MimeTypeEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldMimeType, v))
}

// MimeTypeContainsFold applies the ContainsFold predicate on the "mime_type" field.
func MimeTypeContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldMimeType, v))
}

// AggregateTypeEQ applies the EQ predicate on the "aggregate_type" field.
func AggregateTypeEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAggregateType, v))
}

// AggregateTypeNEQ applies the NEQ predicate on the "aggregate_type" field.
func AggregateTypeNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldAggregateType, v))
}

// AggregateTypeIn applies the In predicate on the "aggregate_type" field.
func AggregateTypeIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldAggregateType, vs...))
}

// AggregateTypeNotIn applies the NotIn predicate on the "aggregate_type" field.
func AggregateTypeNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldAggregateType, vs...))
}

// AggregateTypeGT applies the GT predicate on the "aggregate_type" field.
func AggregateTypeGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldAggregateType, v))
}

// AggregateTypeGTE applies the GTE predicate on the "aggregate_type" field.
func AggregateTypeGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldAggregateType, v))
}

// AggregateTypeLT applies the LT predicate on the "aggregate_type" field.
func AggregateTypeLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldAggregateType, v))
}

// AggregateTypeLTE applies the LTE predicate on the "aggregate_type" field.
func AggregateTypeLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldAggregateType, v))
}

// AggregateTypeContains applies the Contains predicate on the "aggregate_type" field.
func AggregateTypeContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldAggregateType, v))
}

// AggregateTypeHasPrefix applies the HasPrefix predicate on the "aggregate_type" field.
func AggregateTypeHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldAggregateType, v))
}

// AggregateTypeHasSuffix applies the HasSuffix predicate on the "aggregate_type" field.
func AggregateTypeHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldAggregateType, v))
}

// AggregateTypeIsNil applies the IsNil predicate on the "aggregate_type" field.
func AggregateTypeIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldAggregateType))
}

// AggregateTypeNotNil applies the NotNil predicate on the "aggregate_type" field.
func AggregateTypeNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldAggregateType))
}

// AggregateTypeEqualFold applies the EqualFold predicate on the "aggregate_type" field.
func AggregateTypeEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldAggregateType, v))
}

// AggregateTypeContainsFold applies the ContainsFold predicate on the "aggregate_type" field.
func AggregateTypeContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldAggregateType, v))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v uint) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v uint) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...uint) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...uint) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldSize, vs...))
}

// SizeGT applies the GT predicate on the "size" field.
func SizeGT(v uint) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldSize, v))
}

// SizeGTE applies the GTE predicate on the "size" field.
func SizeGTE(v uint) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldSize, v))
}

// SizeLT applies the LT predicate on the "size" field.
func SizeLT(v uint) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldSize, v))
}

// SizeLTE applies the LTE predicate on the "size" field.
func SizeLTE(v uint) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldSize, v))
}

// SizeIsNil applies the IsNil predicate on the "size" field.
func SizeIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldSize))
}

// SizeNotNil applies the NotNil predicate on the "size" field.
func SizeNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldSize))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldDescription, v))
}

// IsVariantEQ applies the EQ predicate on the "is_variant" field.
func IsVariantEQ(v bool) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldIsVariant, v))
}

// IsVariantNEQ applies the NEQ predicate on the "is_variant" field.
func IsVariantNEQ(v bool) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldIsVariant, v))
}

// IsVariantIsNil applies the IsNil predicate on the "is_variant" field.
func IsVariantIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldIsVariant))
}

// IsVariantNotNil applies the NotNil predicate on the "is_variant" field.
func IsVariantNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldIsVariant))
}

// VariantNameEQ applies the EQ predicate on the "variant_name" field.
func VariantNameEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldVariantName, v))
}

// VariantNameNEQ applies the NEQ predicate on the "variant_name" field.
func VariantNameNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldVariantName, v))
}

// VariantNameIn applies the In predicate on the "variant_name" field.
func VariantNameIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldVariantName, vs...))
}

// VariantNameNotIn applies the NotIn predicate on the "variant_name" field.
func VariantNameNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldVariantName, vs...))
}

// VariantNameGT applies the GT predicate on the "variant_name" field.
func VariantNameGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldVariantName, v))
}

// VariantNameGTE applies the GTE predicate on the "variant_name" field.
func VariantNameGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldVariantName, v))
}

// VariantNameLT applies the LT predicate on the "variant_name" field.
func VariantNameLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldVariantName, v))
}

// VariantNameLTE applies the LTE predicate on the "variant_name" field.
func VariantNameLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldVariantName, v))
}

// VariantNameContains applies the Contains predicate on the "variant_name" field.
func VariantNameContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldVariantName, v))
}

// VariantNameHasPrefix applies the HasPrefix predicate on the "variant_name" field.
func VariantNameHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldVariantName, v))
}

// VariantNameHasSuffix applies the HasSuffix predicate on the "variant_name" field.
func VariantNameHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldVariantName, v))
}

// VariantNameIsNil applies the IsNil predicate on the "variant_name" field.
func VariantNameIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldVariantName))
}

// VariantNameNotNil applies the NotNil predicate on the "variant_name" field.
func VariantNameNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldVariantName))
}

// VariantNameEqualFold applies the EqualFold predicate on the "variant_name" field.
func VariantNameEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldVariantName, v))
}

// VariantNameContainsFold applies the ContainsFold predicate on the "variant_name" field.
func VariantNameContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldVariantName, v))
}

// OriginalMediaIDEQ applies the EQ predicate on the "original_media_id" field.
func OriginalMediaIDEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldOriginalMediaID, v))
}

// OriginalMediaIDNEQ applies the NEQ predicate on the "original_media_id" field.
func OriginalMediaIDNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldOriginalMediaID, v))
}

// OriginalMediaIDIn applies the In predicate on the "original_media_id" field.
func OriginalMediaIDIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldOriginalMediaID, vs...))
}

// OriginalMediaIDNotIn applies the NotIn predicate on the "original_media_id" field.
func OriginalMediaIDNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldOriginalMediaID, vs...))
}

// OriginalMediaIDGT applies the GT predicate on the "original_media_id" field.
func OriginalMediaIDGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldOriginalMediaID, v))
}

// OriginalMediaIDGTE applies the GTE predicate on the "original_media_id" field.
func OriginalMediaIDGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldOriginalMediaID, v))
}

// OriginalMediaIDLT applies the LT predicate on the "original_media_id" field.
func OriginalMediaIDLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldOriginalMediaID, v))
}

// OriginalMediaIDLTE applies the LTE predicate on the "original_media_id" field.
func OriginalMediaIDLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldOriginalMediaID, v))
}

// OriginalMediaIDContains applies the Contains predicate on the "original_media_id" field.
func OriginalMediaIDContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldOriginalMediaID, v))
}

// OriginalMediaIDHasPrefix applies the HasPrefix predicate on the "original_media_id" field.
func OriginalMediaIDHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldOriginalMediaID, v))
}

// OriginalMediaIDHasSuffix applies the HasSuffix predicate on the "original_media_id" field.
func OriginalMediaIDHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldOriginalMediaID, v))
}

// OriginalMediaIDIsNil applies the IsNil predicate on the "original_media_id" field.
func OriginalMediaIDIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldOriginalMediaID))
}

// OriginalMediaIDNotNil applies the NotNil predicate on the "original_media_id" field.
func OriginalMediaIDNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldOriginalMediaID))
}

// OriginalMediaIDEqualFold applies the EqualFold predicate on the "original_media_id" field.
func OriginalMediaIDEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldOriginalMediaID, v))
}

// OriginalMediaIDContainsFold applies the ContainsFold predicate on the "original_media_id" field.
func OriginalMediaIDContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldOriginalMediaID, v))
}

// ChecksumEQ applies the EQ predicate on the "checksum" field.
func ChecksumEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldChecksum, v))
}

// ChecksumNEQ applies the NEQ predicate on the "checksum" field.
func ChecksumNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldChecksum, v))
}

// ChecksumIn applies the In predicate on the "checksum" field.
func ChecksumIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldChecksum, vs...))
}

// ChecksumNotIn applies the NotIn predicate on the "checksum" field.
func ChecksumNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldChecksum, vs...))
}

// ChecksumGT applies the GT predicate on the "checksum" field.
func ChecksumGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldChecksum, v))
}

// ChecksumGTE applies the GTE predicate on the "checksum" field.
func ChecksumGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldChecksum, v))
}

// ChecksumLT applies the LT predicate on the "checksum" field.
func ChecksumLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldChecksum, v))
}

// ChecksumLTE applies the LTE predicate on the "checksum" field.
func ChecksumLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldChecksum, v))
}

// ChecksumContains applies the Contains predicate on the "checksum" field.
func ChecksumContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldChecksum, v))
}

// ChecksumHasPrefix applies the HasPrefix predicate on the "checksum" field.
func ChecksumHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldChecksum, v))
}

// ChecksumHasSuffix applies the HasSuffix predicate on the "checksum" field.
func ChecksumHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldChecksum, v))
}

// ChecksumIsNil applies the IsNil predicate on the "checksum" field.
func ChecksumIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldChecksum))
}

// ChecksumNotNil applies the NotNil predicate on the "checksum" field.
func ChecksumNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldChecksum))
}

// ChecksumEqualFold applies the EqualFold predicate on the "checksum" field.
func ChecksumEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldChecksum, v))
}

// ChecksumContainsFold applies the ContainsFold predicate on the "checksum" field.
func ChecksumContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldChecksum, v))
}

// WorkspaceIDEQ applies the EQ predicate on the "workspace_id" field.
func WorkspaceIDEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldWorkspaceID, v))
}

// WorkspaceIDNEQ applies the NEQ predicate on the "workspace_id" field.
func WorkspaceIDNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldWorkspaceID, v))
}

// WorkspaceIDIn applies the In predicate on the "workspace_id" field.
func WorkspaceIDIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldWorkspaceID, vs...))
}

// WorkspaceIDNotIn applies the NotIn predicate on the "workspace_id" field.
func WorkspaceIDNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldWorkspaceID, vs...))
}

// WorkspaceIDGT applies the GT predicate on the "workspace_id" field.
func WorkspaceIDGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldWorkspaceID, v))
}

// WorkspaceIDGTE applies the GTE predicate on the "workspace_id" field.
func WorkspaceIDGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldWorkspaceID, v))
}

// WorkspaceIDLT applies the LT predicate on the "workspace_id" field.
func WorkspaceIDLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldWorkspaceID, v))
}

// WorkspaceIDLTE applies the LTE predicate on the "workspace_id" field.
func WorkspaceIDLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldWorkspaceID, v))
}

// WorkspaceIDContains applies the Contains predicate on the "workspace_id" field.
func WorkspaceIDContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldWorkspaceID, v))
}

// WorkspaceIDHasPrefix applies the HasPrefix predicate on the "workspace_id" field.
func WorkspaceIDHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldWorkspaceID, v))
}

// WorkspaceIDHasSuffix applies the HasSuffix predicate on the "workspace_id" field.
func WorkspaceIDHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldWorkspaceID, v))
}

// WorkspaceIDEqualFold applies the EqualFold predicate on the "workspace_id" field.
func WorkspaceIDEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldWorkspaceID, v))
}

// WorkspaceIDContainsFold applies the ContainsFold predicate on the "workspace_id" field.
func WorkspaceIDContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldWorkspaceID, v))
}

// AltEQ applies the EQ predicate on the "alt" field.
func AltEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldAlt, v))
}

// AltNEQ applies the NEQ predicate on the "alt" field.
func AltNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldAlt, v))
}

// AltIn applies the In predicate on the "alt" field.
func AltIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldAlt, vs...))
}

// AltNotIn applies the NotIn predicate on the "alt" field.
func AltNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldAlt, vs...))
}

// AltGT applies the GT predicate on the "alt" field.
func AltGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldAlt, v))
}

// AltGTE applies the GTE predicate on the "alt" field.
func AltGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldAlt, v))
}

// AltLT applies the LT predicate on the "alt" field.
func AltLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldAlt, v))
}

// AltLTE applies the LTE predicate on the "alt" field.
func AltLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldAlt, v))
}

// AltContains applies the Contains predicate on the "alt" field.
func AltContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldAlt, v))
}

// AltHasPrefix applies the HasPrefix predicate on the "alt" field.
func AltHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldAlt, v))
}

// AltHasSuffix applies the HasSuffix predicate on the "alt" field.
func AltHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldAlt, v))
}

// AltIsNil applies the IsNil predicate on the "alt" field.
func AltIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldAlt))
}

// AltNotNil applies the NotNil predicate on the "alt" field.
func AltNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldAlt))
}

// AltEqualFold applies the EqualFold predicate on the "alt" field.
func AltEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldAlt, v))
}

// AltContainsFold applies the ContainsFold predicate on the "alt" field.
func AltContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldAlt, v))
}

// UIDEQ applies the EQ predicate on the "uid" field.
func UIDEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldUID, v))
}

// UIDNEQ applies the NEQ predicate on the "uid" field.
func UIDNEQ(v string) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldUID, v))
}

// UIDIn applies the In predicate on the "uid" field.
func UIDIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldIn(FieldUID, vs...))
}

// UIDNotIn applies the NotIn predicate on the "uid" field.
func UIDNotIn(vs ...string) predicate.Media {
	return predicate.Media(sql.FieldNotIn(FieldUID, vs...))
}

// UIDGT applies the GT predicate on the "uid" field.
func UIDGT(v string) predicate.Media {
	return predicate.Media(sql.FieldGT(FieldUID, v))
}

// UIDGTE applies the GTE predicate on the "uid" field.
func UIDGTE(v string) predicate.Media {
	return predicate.Media(sql.FieldGTE(FieldUID, v))
}

// UIDLT applies the LT predicate on the "uid" field.
func UIDLT(v string) predicate.Media {
	return predicate.Media(sql.FieldLT(FieldUID, v))
}

// UIDLTE applies the LTE predicate on the "uid" field.
func UIDLTE(v string) predicate.Media {
	return predicate.Media(sql.FieldLTE(FieldUID, v))
}

// UIDContains applies the Contains predicate on the "uid" field.
func UIDContains(v string) predicate.Media {
	return predicate.Media(sql.FieldContains(FieldUID, v))
}

// UIDHasPrefix applies the HasPrefix predicate on the "uid" field.
func UIDHasPrefix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasPrefix(FieldUID, v))
}

// UIDHasSuffix applies the HasSuffix predicate on the "uid" field.
func UIDHasSuffix(v string) predicate.Media {
	return predicate.Media(sql.FieldHasSuffix(FieldUID, v))
}

// UIDIsNil applies the IsNil predicate on the "uid" field.
func UIDIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldUID))
}

// UIDNotNil applies the NotNil predicate on the "uid" field.
func UIDNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldUID))
}

// UIDEqualFold applies the EqualFold predicate on the "uid" field.
func UIDEqualFold(v string) predicate.Media {
	return predicate.Media(sql.FieldEqualFold(FieldUID, v))
}

// UIDContainsFold applies the ContainsFold predicate on the "uid" field.
func UIDContainsFold(v string) predicate.Media {
	return predicate.Media(sql.FieldContainsFold(FieldUID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v bool) predicate.Media {
	return predicate.Media(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v bool) predicate.Media {
	return predicate.Media(sql.FieldNEQ(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.Media {
	return predicate.Media(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.Media {
	return predicate.Media(sql.FieldNotNull(FieldStatus))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Media) predicate.Media {
	return predicate.Media(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Media) predicate.Media {
	return predicate.Media(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Media) predicate.Media {
	return predicate.Media(sql.NotPredicates(p))
}
