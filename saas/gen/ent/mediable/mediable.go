// Code generated by ent, DO NOT EDIT.

package mediable

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the mediable type in the database.
	Label = "mediable"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldMediaID holds the string denoting the media_id field in the database.
	FieldMediaID = "media_id"
	// FieldMediableID holds the string denoting the mediable_id field in the database.
	FieldMediableID = "mediable_id"
	// FieldMediableType holds the string denoting the mediable_type field in the database.
	FieldMediableType = "mediable_type"
	// FieldTag holds the string denoting the tag field in the database.
	FieldTag = "tag"
	// FieldOrder holds the string denoting the order field in the database.
	FieldOrder = "order"
	// Table holds the table name of the mediable in the database.
	Table = "mediables"
)

// Columns holds all SQL columns for mediable fields.
var Columns = []string{
	FieldID,
	FieldAppID,
	FieldMediaID,
	FieldMediableID,
	FieldMediableType,
	FieldTag,
	FieldOrder,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)

// OrderOption defines the ordering options for the Mediable queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByAppID orders the results by the app_id field.
func ByAppID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppID, opts...).ToFunc()
}

// ByMediaID orders the results by the media_id field.
func ByMediaID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMediaID, opts...).ToFunc()
}

// ByMediableID orders the results by the mediable_id field.
func ByMediableID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMediableID, opts...).ToFunc()
}

// ByMediableType orders the results by the mediable_type field.
func ByMediableType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMediableType, opts...).ToFunc()
}

// ByTag orders the results by the tag field.
func ByTag(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTag, opts...).ToFunc()
}

// ByOrder orders the results by the order field.
func ByOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrder, opts...).ToFunc()
}
