// Code generated by ent, DO NOT EDIT.

package appsetting

import (
	"saas/gen/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldUpdatedAt, v))
}

// AppName applies equality check predicate on the "app_name" field. It's identical to AppNameEQ.
func AppName(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAppName, v))
}

// Copyright applies equality check predicate on the "copyright" field. It's identical to CopyrightEQ.
func Copyright(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldCopyright, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldEmail, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAddress, v))
}

// SocialTw applies equality check predicate on the "social_tw" field. It's identical to SocialTwEQ.
func SocialTw(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSocialTw, v))
}

// SocialFb applies equality check predicate on the "social_fb" field. It's identical to SocialFbEQ.
func SocialFb(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSocialFb, v))
}

// SocialIn applies equality check predicate on the "social_in" field. It's identical to SocialInEQ.
func SocialIn(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSocialIn, v))
}

// LogoURL applies equality check predicate on the "logo_url" field. It's identical to LogoURLEQ.
func LogoURL(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldLogoURL, v))
}

// SiteURL applies equality check predicate on the "site_url" field. It's identical to SiteURLEQ.
func SiteURL(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSiteURL, v))
}

// DefaultMailConnID applies equality check predicate on the "default_mail_conn_id" field. It's identical to DefaultMailConnIDEQ.
func DefaultMailConnID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldDefaultMailConnID, v))
}

// MailLayoutTemplID applies equality check predicate on the "mail_layout_templ_id" field. It's identical to MailLayoutTemplIDEQ.
func MailLayoutTemplID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldMailLayoutTemplID, v))
}

// WsapceInviteTemplID applies equality check predicate on the "wsapce_invite_templ_id" field. It's identical to WsapceInviteTemplIDEQ.
func WsapceInviteTemplID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldWsapceInviteTemplID, v))
}

// WsapceSuccessTemplID applies equality check predicate on the "wsapce_success_templ_id" field. It's identical to WsapceSuccessTemplIDEQ.
func WsapceSuccessTemplID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldWsapceSuccessTemplID, v))
}

// AuthFpTemplID applies equality check predicate on the "auth_fp_templ_id" field. It's identical to AuthFpTemplIDEQ.
func AuthFpTemplID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthFpTemplID, v))
}

// AuthWelcomeEmailTemplID applies equality check predicate on the "auth_welcome_email_templ_id" field. It's identical to AuthWelcomeEmailTemplIDEQ.
func AuthWelcomeEmailTemplID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthWelcomeEmailTemplID, v))
}

// AuthVerificationTemplID applies equality check predicate on the "auth_verification_templ_id" field. It's identical to AuthVerificationTemplIDEQ.
func AuthVerificationTemplID(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthVerificationTemplID, v))
}

// AuthEmailVerify applies equality check predicate on the "auth_email_verify" field. It's identical to AuthEmailVerifyEQ.
func AuthEmailVerify(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthEmailVerify, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldUpdatedAt))
}

// AppNameEQ applies the EQ predicate on the "app_name" field.
func AppNameEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAppName, v))
}

// AppNameNEQ applies the NEQ predicate on the "app_name" field.
func AppNameNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldAppName, v))
}

// AppNameIn applies the In predicate on the "app_name" field.
func AppNameIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldAppName, vs...))
}

// AppNameNotIn applies the NotIn predicate on the "app_name" field.
func AppNameNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldAppName, vs...))
}

// AppNameGT applies the GT predicate on the "app_name" field.
func AppNameGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldAppName, v))
}

// AppNameGTE applies the GTE predicate on the "app_name" field.
func AppNameGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldAppName, v))
}

// AppNameLT applies the LT predicate on the "app_name" field.
func AppNameLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldAppName, v))
}

// AppNameLTE applies the LTE predicate on the "app_name" field.
func AppNameLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldAppName, v))
}

// AppNameContains applies the Contains predicate on the "app_name" field.
func AppNameContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldAppName, v))
}

// AppNameHasPrefix applies the HasPrefix predicate on the "app_name" field.
func AppNameHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldAppName, v))
}

// AppNameHasSuffix applies the HasSuffix predicate on the "app_name" field.
func AppNameHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldAppName, v))
}

// AppNameIsNil applies the IsNil predicate on the "app_name" field.
func AppNameIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldAppName))
}

// AppNameNotNil applies the NotNil predicate on the "app_name" field.
func AppNameNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldAppName))
}

// AppNameEqualFold applies the EqualFold predicate on the "app_name" field.
func AppNameEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldAppName, v))
}

// AppNameContainsFold applies the ContainsFold predicate on the "app_name" field.
func AppNameContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldAppName, v))
}

// CopyrightEQ applies the EQ predicate on the "copyright" field.
func CopyrightEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldCopyright, v))
}

// CopyrightNEQ applies the NEQ predicate on the "copyright" field.
func CopyrightNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldCopyright, v))
}

// CopyrightIn applies the In predicate on the "copyright" field.
func CopyrightIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldCopyright, vs...))
}

// CopyrightNotIn applies the NotIn predicate on the "copyright" field.
func CopyrightNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldCopyright, vs...))
}

// CopyrightGT applies the GT predicate on the "copyright" field.
func CopyrightGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldCopyright, v))
}

// CopyrightGTE applies the GTE predicate on the "copyright" field.
func CopyrightGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldCopyright, v))
}

// CopyrightLT applies the LT predicate on the "copyright" field.
func CopyrightLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldCopyright, v))
}

// CopyrightLTE applies the LTE predicate on the "copyright" field.
func CopyrightLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldCopyright, v))
}

// CopyrightContains applies the Contains predicate on the "copyright" field.
func CopyrightContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldCopyright, v))
}

// CopyrightHasPrefix applies the HasPrefix predicate on the "copyright" field.
func CopyrightHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldCopyright, v))
}

// CopyrightHasSuffix applies the HasSuffix predicate on the "copyright" field.
func CopyrightHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldCopyright, v))
}

// CopyrightIsNil applies the IsNil predicate on the "copyright" field.
func CopyrightIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldCopyright))
}

// CopyrightNotNil applies the NotNil predicate on the "copyright" field.
func CopyrightNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldCopyright))
}

// CopyrightEqualFold applies the EqualFold predicate on the "copyright" field.
func CopyrightEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldCopyright, v))
}

// CopyrightContainsFold applies the ContainsFold predicate on the "copyright" field.
func CopyrightContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldCopyright, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailIsNil applies the IsNil predicate on the "email" field.
func EmailIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldEmail))
}

// EmailNotNil applies the NotNil predicate on the "email" field.
func EmailNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldEmail))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldEmail, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldAddress, v))
}

// SocialTwEQ applies the EQ predicate on the "social_tw" field.
func SocialTwEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSocialTw, v))
}

// SocialTwNEQ applies the NEQ predicate on the "social_tw" field.
func SocialTwNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldSocialTw, v))
}

// SocialTwIn applies the In predicate on the "social_tw" field.
func SocialTwIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldSocialTw, vs...))
}

// SocialTwNotIn applies the NotIn predicate on the "social_tw" field.
func SocialTwNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldSocialTw, vs...))
}

// SocialTwGT applies the GT predicate on the "social_tw" field.
func SocialTwGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldSocialTw, v))
}

// SocialTwGTE applies the GTE predicate on the "social_tw" field.
func SocialTwGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldSocialTw, v))
}

// SocialTwLT applies the LT predicate on the "social_tw" field.
func SocialTwLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldSocialTw, v))
}

// SocialTwLTE applies the LTE predicate on the "social_tw" field.
func SocialTwLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldSocialTw, v))
}

// SocialTwContains applies the Contains predicate on the "social_tw" field.
func SocialTwContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldSocialTw, v))
}

// SocialTwHasPrefix applies the HasPrefix predicate on the "social_tw" field.
func SocialTwHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldSocialTw, v))
}

// SocialTwHasSuffix applies the HasSuffix predicate on the "social_tw" field.
func SocialTwHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldSocialTw, v))
}

// SocialTwIsNil applies the IsNil predicate on the "social_tw" field.
func SocialTwIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldSocialTw))
}

// SocialTwNotNil applies the NotNil predicate on the "social_tw" field.
func SocialTwNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldSocialTw))
}

// SocialTwEqualFold applies the EqualFold predicate on the "social_tw" field.
func SocialTwEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldSocialTw, v))
}

// SocialTwContainsFold applies the ContainsFold predicate on the "social_tw" field.
func SocialTwContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldSocialTw, v))
}

// SocialFbEQ applies the EQ predicate on the "social_fb" field.
func SocialFbEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSocialFb, v))
}

// SocialFbNEQ applies the NEQ predicate on the "social_fb" field.
func SocialFbNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldSocialFb, v))
}

// SocialFbIn applies the In predicate on the "social_fb" field.
func SocialFbIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldSocialFb, vs...))
}

// SocialFbNotIn applies the NotIn predicate on the "social_fb" field.
func SocialFbNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldSocialFb, vs...))
}

// SocialFbGT applies the GT predicate on the "social_fb" field.
func SocialFbGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldSocialFb, v))
}

// SocialFbGTE applies the GTE predicate on the "social_fb" field.
func SocialFbGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldSocialFb, v))
}

// SocialFbLT applies the LT predicate on the "social_fb" field.
func SocialFbLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldSocialFb, v))
}

// SocialFbLTE applies the LTE predicate on the "social_fb" field.
func SocialFbLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldSocialFb, v))
}

// SocialFbContains applies the Contains predicate on the "social_fb" field.
func SocialFbContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldSocialFb, v))
}

// SocialFbHasPrefix applies the HasPrefix predicate on the "social_fb" field.
func SocialFbHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldSocialFb, v))
}

// SocialFbHasSuffix applies the HasSuffix predicate on the "social_fb" field.
func SocialFbHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldSocialFb, v))
}

// SocialFbIsNil applies the IsNil predicate on the "social_fb" field.
func SocialFbIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldSocialFb))
}

// SocialFbNotNil applies the NotNil predicate on the "social_fb" field.
func SocialFbNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldSocialFb))
}

// SocialFbEqualFold applies the EqualFold predicate on the "social_fb" field.
func SocialFbEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldSocialFb, v))
}

// SocialFbContainsFold applies the ContainsFold predicate on the "social_fb" field.
func SocialFbContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldSocialFb, v))
}

// SocialInEQ applies the EQ predicate on the "social_in" field.
func SocialInEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSocialIn, v))
}

// SocialInNEQ applies the NEQ predicate on the "social_in" field.
func SocialInNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldSocialIn, v))
}

// SocialInIn applies the In predicate on the "social_in" field.
func SocialInIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldSocialIn, vs...))
}

// SocialInNotIn applies the NotIn predicate on the "social_in" field.
func SocialInNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldSocialIn, vs...))
}

// SocialInGT applies the GT predicate on the "social_in" field.
func SocialInGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldSocialIn, v))
}

// SocialInGTE applies the GTE predicate on the "social_in" field.
func SocialInGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldSocialIn, v))
}

// SocialInLT applies the LT predicate on the "social_in" field.
func SocialInLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldSocialIn, v))
}

// SocialInLTE applies the LTE predicate on the "social_in" field.
func SocialInLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldSocialIn, v))
}

// SocialInContains applies the Contains predicate on the "social_in" field.
func SocialInContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldSocialIn, v))
}

// SocialInHasPrefix applies the HasPrefix predicate on the "social_in" field.
func SocialInHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldSocialIn, v))
}

// SocialInHasSuffix applies the HasSuffix predicate on the "social_in" field.
func SocialInHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldSocialIn, v))
}

// SocialInIsNil applies the IsNil predicate on the "social_in" field.
func SocialInIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldSocialIn))
}

// SocialInNotNil applies the NotNil predicate on the "social_in" field.
func SocialInNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldSocialIn))
}

// SocialInEqualFold applies the EqualFold predicate on the "social_in" field.
func SocialInEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldSocialIn, v))
}

// SocialInContainsFold applies the ContainsFold predicate on the "social_in" field.
func SocialInContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldSocialIn, v))
}

// LogoURLEQ applies the EQ predicate on the "logo_url" field.
func LogoURLEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldLogoURL, v))
}

// LogoURLNEQ applies the NEQ predicate on the "logo_url" field.
func LogoURLNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldLogoURL, v))
}

// LogoURLIn applies the In predicate on the "logo_url" field.
func LogoURLIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldLogoURL, vs...))
}

// LogoURLNotIn applies the NotIn predicate on the "logo_url" field.
func LogoURLNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldLogoURL, vs...))
}

// LogoURLGT applies the GT predicate on the "logo_url" field.
func LogoURLGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldLogoURL, v))
}

// LogoURLGTE applies the GTE predicate on the "logo_url" field.
func LogoURLGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldLogoURL, v))
}

// LogoURLLT applies the LT predicate on the "logo_url" field.
func LogoURLLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldLogoURL, v))
}

// LogoURLLTE applies the LTE predicate on the "logo_url" field.
func LogoURLLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldLogoURL, v))
}

// LogoURLContains applies the Contains predicate on the "logo_url" field.
func LogoURLContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldLogoURL, v))
}

// LogoURLHasPrefix applies the HasPrefix predicate on the "logo_url" field.
func LogoURLHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldLogoURL, v))
}

// LogoURLHasSuffix applies the HasSuffix predicate on the "logo_url" field.
func LogoURLHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldLogoURL, v))
}

// LogoURLIsNil applies the IsNil predicate on the "logo_url" field.
func LogoURLIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldLogoURL))
}

// LogoURLNotNil applies the NotNil predicate on the "logo_url" field.
func LogoURLNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldLogoURL))
}

// LogoURLEqualFold applies the EqualFold predicate on the "logo_url" field.
func LogoURLEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldLogoURL, v))
}

// LogoURLContainsFold applies the ContainsFold predicate on the "logo_url" field.
func LogoURLContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldLogoURL, v))
}

// SiteURLEQ applies the EQ predicate on the "site_url" field.
func SiteURLEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldSiteURL, v))
}

// SiteURLNEQ applies the NEQ predicate on the "site_url" field.
func SiteURLNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldSiteURL, v))
}

// SiteURLIn applies the In predicate on the "site_url" field.
func SiteURLIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldSiteURL, vs...))
}

// SiteURLNotIn applies the NotIn predicate on the "site_url" field.
func SiteURLNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldSiteURL, vs...))
}

// SiteURLGT applies the GT predicate on the "site_url" field.
func SiteURLGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldSiteURL, v))
}

// SiteURLGTE applies the GTE predicate on the "site_url" field.
func SiteURLGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldSiteURL, v))
}

// SiteURLLT applies the LT predicate on the "site_url" field.
func SiteURLLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldSiteURL, v))
}

// SiteURLLTE applies the LTE predicate on the "site_url" field.
func SiteURLLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldSiteURL, v))
}

// SiteURLContains applies the Contains predicate on the "site_url" field.
func SiteURLContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldSiteURL, v))
}

// SiteURLHasPrefix applies the HasPrefix predicate on the "site_url" field.
func SiteURLHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldSiteURL, v))
}

// SiteURLHasSuffix applies the HasSuffix predicate on the "site_url" field.
func SiteURLHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldSiteURL, v))
}

// SiteURLIsNil applies the IsNil predicate on the "site_url" field.
func SiteURLIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldSiteURL))
}

// SiteURLNotNil applies the NotNil predicate on the "site_url" field.
func SiteURLNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldSiteURL))
}

// SiteURLEqualFold applies the EqualFold predicate on the "site_url" field.
func SiteURLEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldSiteURL, v))
}

// SiteURLContainsFold applies the ContainsFold predicate on the "site_url" field.
func SiteURLContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldSiteURL, v))
}

// DefaultMailConnIDEQ applies the EQ predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDNEQ applies the NEQ predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDIn applies the In predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldDefaultMailConnID, vs...))
}

// DefaultMailConnIDNotIn applies the NotIn predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldDefaultMailConnID, vs...))
}

// DefaultMailConnIDGT applies the GT predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDGTE applies the GTE predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDLT applies the LT predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDLTE applies the LTE predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDContains applies the Contains predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDHasPrefix applies the HasPrefix predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDHasSuffix applies the HasSuffix predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDIsNil applies the IsNil predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldDefaultMailConnID))
}

// DefaultMailConnIDNotNil applies the NotNil predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldDefaultMailConnID))
}

// DefaultMailConnIDEqualFold applies the EqualFold predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldDefaultMailConnID, v))
}

// DefaultMailConnIDContainsFold applies the ContainsFold predicate on the "default_mail_conn_id" field.
func DefaultMailConnIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldDefaultMailConnID, v))
}

// MailLayoutTemplIDEQ applies the EQ predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDNEQ applies the NEQ predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDIn applies the In predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldMailLayoutTemplID, vs...))
}

// MailLayoutTemplIDNotIn applies the NotIn predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldMailLayoutTemplID, vs...))
}

// MailLayoutTemplIDGT applies the GT predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDGTE applies the GTE predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDLT applies the LT predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDLTE applies the LTE predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDContains applies the Contains predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDHasPrefix applies the HasPrefix predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDHasSuffix applies the HasSuffix predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDIsNil applies the IsNil predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldMailLayoutTemplID))
}

// MailLayoutTemplIDNotNil applies the NotNil predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldMailLayoutTemplID))
}

// MailLayoutTemplIDEqualFold applies the EqualFold predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldMailLayoutTemplID, v))
}

// MailLayoutTemplIDContainsFold applies the ContainsFold predicate on the "mail_layout_templ_id" field.
func MailLayoutTemplIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldMailLayoutTemplID, v))
}

// WsapceInviteTemplIDEQ applies the EQ predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDNEQ applies the NEQ predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDIn applies the In predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldWsapceInviteTemplID, vs...))
}

// WsapceInviteTemplIDNotIn applies the NotIn predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldWsapceInviteTemplID, vs...))
}

// WsapceInviteTemplIDGT applies the GT predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDGTE applies the GTE predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDLT applies the LT predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDLTE applies the LTE predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDContains applies the Contains predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDHasPrefix applies the HasPrefix predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDHasSuffix applies the HasSuffix predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDIsNil applies the IsNil predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldWsapceInviteTemplID))
}

// WsapceInviteTemplIDNotNil applies the NotNil predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldWsapceInviteTemplID))
}

// WsapceInviteTemplIDEqualFold applies the EqualFold predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldWsapceInviteTemplID, v))
}

// WsapceInviteTemplIDContainsFold applies the ContainsFold predicate on the "wsapce_invite_templ_id" field.
func WsapceInviteTemplIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldWsapceInviteTemplID, v))
}

// WsapceSuccessTemplIDEQ applies the EQ predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDNEQ applies the NEQ predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDIn applies the In predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldWsapceSuccessTemplID, vs...))
}

// WsapceSuccessTemplIDNotIn applies the NotIn predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldWsapceSuccessTemplID, vs...))
}

// WsapceSuccessTemplIDGT applies the GT predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDGTE applies the GTE predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDLT applies the LT predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDLTE applies the LTE predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDContains applies the Contains predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDHasPrefix applies the HasPrefix predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDHasSuffix applies the HasSuffix predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDIsNil applies the IsNil predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldWsapceSuccessTemplID))
}

// WsapceSuccessTemplIDNotNil applies the NotNil predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldWsapceSuccessTemplID))
}

// WsapceSuccessTemplIDEqualFold applies the EqualFold predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldWsapceSuccessTemplID, v))
}

// WsapceSuccessTemplIDContainsFold applies the ContainsFold predicate on the "wsapce_success_templ_id" field.
func WsapceSuccessTemplIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldWsapceSuccessTemplID, v))
}

// AuthFpTemplIDEQ applies the EQ predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDNEQ applies the NEQ predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDIn applies the In predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldAuthFpTemplID, vs...))
}

// AuthFpTemplIDNotIn applies the NotIn predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldAuthFpTemplID, vs...))
}

// AuthFpTemplIDGT applies the GT predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDGTE applies the GTE predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDLT applies the LT predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDLTE applies the LTE predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDContains applies the Contains predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDHasPrefix applies the HasPrefix predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDHasSuffix applies the HasSuffix predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDIsNil applies the IsNil predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldAuthFpTemplID))
}

// AuthFpTemplIDNotNil applies the NotNil predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldAuthFpTemplID))
}

// AuthFpTemplIDEqualFold applies the EqualFold predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldAuthFpTemplID, v))
}

// AuthFpTemplIDContainsFold applies the ContainsFold predicate on the "auth_fp_templ_id" field.
func AuthFpTemplIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldAuthFpTemplID, v))
}

// AuthWelcomeEmailTemplIDEQ applies the EQ predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDNEQ applies the NEQ predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDIn applies the In predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldAuthWelcomeEmailTemplID, vs...))
}

// AuthWelcomeEmailTemplIDNotIn applies the NotIn predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldAuthWelcomeEmailTemplID, vs...))
}

// AuthWelcomeEmailTemplIDGT applies the GT predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDGTE applies the GTE predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDLT applies the LT predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDLTE applies the LTE predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDContains applies the Contains predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDHasPrefix applies the HasPrefix predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDHasSuffix applies the HasSuffix predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDIsNil applies the IsNil predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldAuthWelcomeEmailTemplID))
}

// AuthWelcomeEmailTemplIDNotNil applies the NotNil predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldAuthWelcomeEmailTemplID))
}

// AuthWelcomeEmailTemplIDEqualFold applies the EqualFold predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldAuthWelcomeEmailTemplID, v))
}

// AuthWelcomeEmailTemplIDContainsFold applies the ContainsFold predicate on the "auth_welcome_email_templ_id" field.
func AuthWelcomeEmailTemplIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldAuthWelcomeEmailTemplID, v))
}

// AuthVerificationTemplIDEQ applies the EQ predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDNEQ applies the NEQ predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDIn applies the In predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldAuthVerificationTemplID, vs...))
}

// AuthVerificationTemplIDNotIn applies the NotIn predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldAuthVerificationTemplID, vs...))
}

// AuthVerificationTemplIDGT applies the GT predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDGTE applies the GTE predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDLT applies the LT predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDLTE applies the LTE predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDContains applies the Contains predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDHasPrefix applies the HasPrefix predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDHasSuffix applies the HasSuffix predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDIsNil applies the IsNil predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldAuthVerificationTemplID))
}

// AuthVerificationTemplIDNotNil applies the NotNil predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldAuthVerificationTemplID))
}

// AuthVerificationTemplIDEqualFold applies the EqualFold predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldAuthVerificationTemplID, v))
}

// AuthVerificationTemplIDContainsFold applies the ContainsFold predicate on the "auth_verification_templ_id" field.
func AuthVerificationTemplIDContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldAuthVerificationTemplID, v))
}

// AuthEmailVerifyEQ applies the EQ predicate on the "auth_email_verify" field.
func AuthEmailVerifyEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEQ(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyNEQ applies the NEQ predicate on the "auth_email_verify" field.
func AuthEmailVerifyNEQ(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNEQ(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyIn applies the In predicate on the "auth_email_verify" field.
func AuthEmailVerifyIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIn(FieldAuthEmailVerify, vs...))
}

// AuthEmailVerifyNotIn applies the NotIn predicate on the "auth_email_verify" field.
func AuthEmailVerifyNotIn(vs ...string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotIn(FieldAuthEmailVerify, vs...))
}

// AuthEmailVerifyGT applies the GT predicate on the "auth_email_verify" field.
func AuthEmailVerifyGT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGT(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyGTE applies the GTE predicate on the "auth_email_verify" field.
func AuthEmailVerifyGTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldGTE(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyLT applies the LT predicate on the "auth_email_verify" field.
func AuthEmailVerifyLT(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLT(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyLTE applies the LTE predicate on the "auth_email_verify" field.
func AuthEmailVerifyLTE(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldLTE(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyContains applies the Contains predicate on the "auth_email_verify" field.
func AuthEmailVerifyContains(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContains(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyHasPrefix applies the HasPrefix predicate on the "auth_email_verify" field.
func AuthEmailVerifyHasPrefix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasPrefix(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyHasSuffix applies the HasSuffix predicate on the "auth_email_verify" field.
func AuthEmailVerifyHasSuffix(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldHasSuffix(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyIsNil applies the IsNil predicate on the "auth_email_verify" field.
func AuthEmailVerifyIsNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldIsNull(FieldAuthEmailVerify))
}

// AuthEmailVerifyNotNil applies the NotNil predicate on the "auth_email_verify" field.
func AuthEmailVerifyNotNil() predicate.AppSetting {
	return predicate.AppSetting(sql.FieldNotNull(FieldAuthEmailVerify))
}

// AuthEmailVerifyEqualFold applies the EqualFold predicate on the "auth_email_verify" field.
func AuthEmailVerifyEqualFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldEqualFold(FieldAuthEmailVerify, v))
}

// AuthEmailVerifyContainsFold applies the ContainsFold predicate on the "auth_email_verify" field.
func AuthEmailVerifyContainsFold(v string) predicate.AppSetting {
	return predicate.AppSetting(sql.FieldContainsFold(FieldAuthEmailVerify, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AppSetting) predicate.AppSetting {
	return predicate.AppSetting(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AppSetting) predicate.AppSetting {
	return predicate.AppSetting(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AppSetting) predicate.AppSetting {
	return predicate.AppSetting(sql.NotPredicates(p))
}
