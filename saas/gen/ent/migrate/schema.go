// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MediaColumns holds the columns for the "media" table.
	MediaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "disk", Type: field.TypeString, Nullable: true},
		{Name: "directory", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "original_name", Type: field.TypeString, Nullable: true},
		{Name: "extension", Type: field.TypeString, Nullable: true},
		{Name: "mime_type", Type: field.TypeString, Nullable: true},
		{Name: "aggregate_type", Type: field.TypeString, Nullable: true},
		{Name: "size", Type: field.TypeUint, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_variant", Type: field.TypeBool, Nullable: true},
		{Name: "variant_name", Type: field.TypeString, Nullable: true},
		{Name: "original_media_id", Type: field.TypeString, Nullable: true},
		{Name: "checksum", Type: field.TypeString, Nullable: true},
		{Name: "workspace_id", Type: field.TypeString},
		{Name: "alt", Type: field.TypeString, Nullable: true},
		{Name: "uid", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// MediaTable holds the schema information for the "media" table.
	MediaTable = &schema.Table{
		Name:       "media",
		Columns:    MediaColumns,
		PrimaryKey: []*schema.Column{MediaColumns[0]},
	}
	// MediablesColumns holds the columns for the "mediables" table.
	MediablesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "media_id", Type: field.TypeString, Nullable: true},
		{Name: "mediable_id", Type: field.TypeString, Nullable: true},
		{Name: "mediable_type", Type: field.TypeString, Nullable: true},
		{Name: "tag", Type: field.TypeString, Nullable: true},
		{Name: "order", Type: field.TypeInt, Nullable: true},
	}
	// MediablesTable holds the schema information for the "mediables" table.
	MediablesTable = &schema.Table{
		Name:       "mediables",
		Columns:    MediablesColumns,
		PrimaryKey: []*schema.Column{MediablesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "mediable_media_id_mediable_id_mediable_type_tag",
				Unique:  true,
				Columns: []*schema.Column{MediablesColumns[2], MediablesColumns[3], MediablesColumns[4], MediablesColumns[5]},
			},
		},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Nullable: true},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MediaTable,
		MediablesTable,
		PostsTable,
	}
)

func init() {
}
