// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// KachesColumns holds the columns for the "kaches" table.
	KachesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 36},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "key", Type: field.TypeString, Nullable: true},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "expires", Type: field.TypeInt, Nullable: true},
	}
	// KachesTable holds the schema information for the "kaches" table.
	KachesTable = &schema.Table{
		Name:       "kaches",
		Columns:    KachesColumns,
		PrimaryKey: []*schema.Column{KachesColumns[0]},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "secret", Type: field.TypeString, Nullable: true},
		{Name: "role_id", Type: field.TypeInt, Nullable: true},
		{Name: "api_key", Type: field.TypeString, Nullable: true},
		{Name: "welcome_email_sent", Type: field.TypeBool, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		KachesTable,
		ProjectsTable,
		UsersTable,
	}
)

func init() {
}
