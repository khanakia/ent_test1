// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminUsersColumns holds the columns for the "admin_users" table.
	AdminUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "locale", Type: field.TypeString, Nullable: true},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Default: "sa"},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "secret", Type: field.TypeString, Nullable: true},
		{Name: "api_key", Type: field.TypeString, Nullable: true},
		{Name: "welcome_email_sent", Type: field.TypeBool, Nullable: true},
	}
	// AdminUsersTable holds the schema information for the "admin_users" table.
	AdminUsersTable = &schema.Table{
		Name:       "admin_users",
		Columns:    AdminUsersColumns,
		PrimaryKey: []*schema.Column{AdminUsersColumns[0]},
	}
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "copyright", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "social_tw", Type: field.TypeString, Nullable: true},
		{Name: "social_fb", Type: field.TypeString, Nullable: true},
		{Name: "social_in", Type: field.TypeString, Nullable: true},
		{Name: "logo_url", Type: field.TypeString, Nullable: true},
		{Name: "site_url", Type: field.TypeString, Nullable: true},
		{Name: "default_mail_conn_id", Type: field.TypeString, Nullable: true},
		{Name: "mail_layout_templ_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "wsapce_invite_templ_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "wsapce_success_templ_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "auth_fp_templ_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "auth_welcome_email_templ_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "auth_verification_templ_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "auth_email_verify", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "admin_user_id", Type: field.TypeString, Nullable: true},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:       "apps",
		Columns:    AppsColumns,
		PrimaryKey: []*schema.Column{AppsColumns[0]},
	}
	// KachesColumns holds the columns for the "kaches" table.
	KachesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 36},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "expires", Type: field.TypeInt, Nullable: true},
	}
	// KachesTable holds the schema information for the "kaches" table.
	KachesTable = &schema.Table{
		Name:       "kaches",
		Columns:    KachesColumns,
		PrimaryKey: []*schema.Column{KachesColumns[0]},
	}
	// KeyvaluesColumns holds the columns for the "keyvalues" table.
	KeyvaluesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 36},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// KeyvaluesTable holds the schema information for the "keyvalues" table.
	KeyvaluesTable = &schema.Table{
		Name:       "keyvalues",
		Columns:    KeyvaluesColumns,
		PrimaryKey: []*schema.Column{KeyvaluesColumns[0]},
	}
	// MailConnsColumns holds the columns for the "mail_conns" table.
	MailConnsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "host", Type: field.TypeString, Nullable: true},
		{Name: "port", Type: field.TypeInt, Nullable: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "encryption", Type: field.TypeInt, Nullable: true},
		{Name: "from_name", Type: field.TypeString, Nullable: true},
		{Name: "from_email", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: true},
	}
	// MailConnsTable holds the schema information for the "mail_conns" table.
	MailConnsTable = &schema.Table{
		Name:       "mail_conns",
		Columns:    MailConnsColumns,
		PrimaryKey: []*schema.Column{MailConnsColumns[0]},
	}
	// MediaColumns holds the columns for the "media" table.
	MediaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "disk", Type: field.TypeString, Nullable: true},
		{Name: "directory", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "original_name", Type: field.TypeString, Nullable: true},
		{Name: "extension", Type: field.TypeString, Nullable: true},
		{Name: "mime_type", Type: field.TypeString, Nullable: true},
		{Name: "aggregate_type", Type: field.TypeString, Nullable: true},
		{Name: "size", Type: field.TypeUint, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_variant", Type: field.TypeBool, Nullable: true},
		{Name: "variant_name", Type: field.TypeString, Nullable: true},
		{Name: "original_media_id", Type: field.TypeString, Nullable: true},
		{Name: "checksum", Type: field.TypeString, Nullable: true},
		{Name: "workspace_id", Type: field.TypeString},
		{Name: "alt", Type: field.TypeString, Nullable: true},
		{Name: "uid", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// MediaTable holds the schema information for the "media" table.
	MediaTable = &schema.Table{
		Name:       "media",
		Columns:    MediaColumns,
		PrimaryKey: []*schema.Column{MediaColumns[0]},
	}
	// OauthConnectionsColumns holds the columns for the "oauth_connections" table.
	OauthConnectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "provider", Type: field.TypeString, Nullable: true},
		{Name: "client_id", Type: field.TypeString, Nullable: true},
		{Name: "client_secret", Type: field.TypeString, Nullable: true},
		{Name: "scopes", Type: field.TypeString, Nullable: true},
		{Name: "redirect_url", Type: field.TypeString, Nullable: true},
		{Name: "dashboard_link", Type: field.TypeString, Nullable: true},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true},
	}
	// OauthConnectionsTable holds the schema information for the "oauth_connections" table.
	OauthConnectionsTable = &schema.Table{
		Name:       "oauth_connections",
		Columns:    OauthConnectionsColumns,
		PrimaryKey: []*schema.Column{OauthConnectionsColumns[0]},
	}
	// PlansColumns holds the columns for the "plans" table.
	PlansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "excerpt", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// PlansTable holds the schema information for the "plans" table.
	PlansTable = &schema.Table{
		Name:       "plans",
		Columns:    PlansColumns,
		PrimaryKey: []*schema.Column{PlansColumns[0]},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Nullable: true},
		{Name: "headline", Type: field.TypeString, Nullable: true},
		{Name: "excerpt", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "meta_title", Type: field.TypeString, Nullable: true},
		{Name: "meta_descr", Type: field.TypeString, Nullable: true},
		{Name: "meta_canonical_url", Type: field.TypeString, Nullable: true},
		{Name: "meta_robots", Type: field.TypeString, Nullable: true},
		{Name: "primary_category_id", Type: field.TypeString, Nullable: true},
		{Name: "post_status_id", Type: field.TypeString, Nullable: true},
		{Name: "post_type_id", Type: field.TypeString, Nullable: true},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "posts_post_categories_posts",
				Columns:    []*schema.Column{PostsColumns[13]},
				RefColumns: []*schema.Column{PostCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "posts_post_status_posts",
				Columns:    []*schema.Column{PostsColumns[14]},
				RefColumns: []*schema.Column{PostStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "posts_post_types_posts",
				Columns:    []*schema.Column{PostsColumns[15]},
				RefColumns: []*schema.Column{PostTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "post_app_id_slug",
				Unique:  true,
				Columns: []*schema.Column{PostsColumns[3], PostsColumns[5]},
			},
		},
	}
	// PostCategoriesColumns holds the columns for the "post_categories" table.
	PostCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "excerpt", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "meta_title", Type: field.TypeString, Nullable: true},
		{Name: "meta_descr", Type: field.TypeString, Nullable: true},
		{Name: "meta_canonical_url", Type: field.TypeString, Nullable: true},
		{Name: "meta_robots", Type: field.TypeString, Nullable: true},
	}
	// PostCategoriesTable holds the schema information for the "post_categories" table.
	PostCategoriesTable = &schema.Table{
		Name:       "post_categories",
		Columns:    PostCategoriesColumns,
		PrimaryKey: []*schema.Column{PostCategoriesColumns[0]},
	}
	// PostStatusColumns holds the columns for the "post_status" table.
	PostStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true},
		{Name: "post_type_id", Type: field.TypeString, Nullable: true},
	}
	// PostStatusTable holds the schema information for the "post_status" table.
	PostStatusTable = &schema.Table{
		Name:       "post_status",
		Columns:    PostStatusColumns,
		PrimaryKey: []*schema.Column{PostStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "post_status_post_types_post_statuses",
				Columns:    []*schema.Column{PostStatusColumns[7]},
				RefColumns: []*schema.Column{PostTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PostTagsColumns holds the columns for the "post_tags" table.
	PostTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "excerpt", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "meta_title", Type: field.TypeString, Nullable: true},
		{Name: "meta_descr", Type: field.TypeString, Nullable: true},
		{Name: "meta_canonical_url", Type: field.TypeString, Nullable: true},
		{Name: "meta_robots", Type: field.TypeString, Nullable: true},
	}
	// PostTagsTable holds the schema information for the "post_tags" table.
	PostTagsTable = &schema.Table{
		Name:       "post_tags",
		Columns:    PostTagsColumns,
		PrimaryKey: []*schema.Column{PostTagsColumns[0]},
	}
	// PostTypesColumns holds the columns for the "post_types" table.
	PostTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "published"},
		{Name: "excerpt", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "meta_title", Type: field.TypeString, Nullable: true},
		{Name: "meta_descr", Type: field.TypeString, Nullable: true},
		{Name: "meta_canonical_url", Type: field.TypeString, Nullable: true},
		{Name: "meta_robots", Type: field.TypeString, Nullable: true},
	}
	// PostTypesTable holds the schema information for the "post_types" table.
	PostTypesTable = &schema.Table{
		Name:       "post_types",
		Columns:    PostTypesColumns,
		PrimaryKey: []*schema.Column{PostTypesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "posttype_app_id_slug",
				Unique:  true,
				Columns: []*schema.Column{PostTypesColumns[3], PostTypesColumns[5]},
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "ip", Type: field.TypeString, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "payload", Type: field.TypeString, Nullable: true},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_sessions",
				Columns:    []*schema.Column{SessionsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TempsColumns holds the columns for the "temps" table.
	TempsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "ip", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "body", Type: field.TypeJSON, Nullable: true},
		{Name: "meta", Type: field.TypeJSON, Nullable: true},
	}
	// TempsTable holds the schema information for the "temps" table.
	TempsTable = &schema.Table{
		Name:       "temps",
		Columns:    TempsColumns,
		PrimaryKey: []*schema.Column{TempsColumns[0]},
	}
	// TemplsColumns holds the columns for the "templs" table.
	TemplsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "body", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "compiled", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: true},
	}
	// TemplsTable holds the schema information for the "templs" table.
	TemplsTable = &schema.Table{
		Name:       "templs",
		Columns:    TemplsColumns,
		PrimaryKey: []*schema.Column{TemplsColumns[0]},
	}
	// TodosColumns holds the columns for the "todos" table.
	TodosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "text", Type: field.TypeString, Size: 2147483647},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"IN_PROGRESS", "COMPLETED"}, Default: "IN_PROGRESS"},
		{Name: "priority", Type: field.TypeInt, Default: 0},
		{Name: "todo_parent", Type: field.TypeString, Nullable: true},
	}
	// TodosTable holds the schema information for the "todos" table.
	TodosTable = &schema.Table{
		Name:       "todos",
		Columns:    TodosColumns,
		PrimaryKey: []*schema.Column{TodosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "todos_todos_parent",
				Columns:    []*schema.Column{TodosColumns[7]},
				RefColumns: []*schema.Column{TodosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "locale", Type: field.TypeString, Nullable: true},
		{Name: "role_id", Type: field.TypeString, Nullable: true, Default: "sa"},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "secret", Type: field.TypeString, Nullable: true},
		{Name: "api_key", Type: field.TypeString, Nullable: true},
		{Name: "welcome_email_sent", Type: field.TypeBool, Nullable: true},
		{Name: "can_admin", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_app_id_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3], UsersColumns[4]},
			},
			{
				Name:    "user_app_id_phone",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3], UsersColumns[5]},
			},
		},
	}
	// WorkspacesColumns holds the columns for the "workspaces" table.
	WorkspacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "is_personal", Type: field.TypeBool, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
	}
	// WorkspacesTable holds the schema information for the "workspaces" table.
	WorkspacesTable = &schema.Table{
		Name:       "workspaces",
		Columns:    WorkspacesColumns,
		PrimaryKey: []*schema.Column{WorkspacesColumns[0]},
	}
	// WorkspaceInvitesColumns holds the columns for the "workspace_invites" table.
	WorkspaceInvitesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "role", Type: field.TypeString, Nullable: true},
		{Name: "workspace_id", Type: field.TypeString, Nullable: true},
	}
	// WorkspaceInvitesTable holds the schema information for the "workspace_invites" table.
	WorkspaceInvitesTable = &schema.Table{
		Name:       "workspace_invites",
		Columns:    WorkspaceInvitesColumns,
		PrimaryKey: []*schema.Column{WorkspaceInvitesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workspace_invites_workspaces_workspace_invites",
				Columns:    []*schema.Column{WorkspaceInvitesColumns[6]},
				RefColumns: []*schema.Column{WorkspacesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workspaceinvite_workspace_id_email",
				Unique:  false,
				Columns: []*schema.Column{WorkspaceInvitesColumns[6], WorkspaceInvitesColumns[4]},
			},
		},
	}
	// WorkspaceUsersColumns holds the columns for the "workspace_users" table.
	WorkspaceUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Nullable: true},
		{Name: "role", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "workspace_id", Type: field.TypeString},
	}
	// WorkspaceUsersTable holds the schema information for the "workspace_users" table.
	WorkspaceUsersTable = &schema.Table{
		Name:       "workspace_users",
		Columns:    WorkspaceUsersColumns,
		PrimaryKey: []*schema.Column{WorkspaceUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workspace_users_users_user",
				Columns:    []*schema.Column{WorkspaceUsersColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workspace_users_workspaces_workspace",
				Columns:    []*schema.Column{WorkspaceUsersColumns[6]},
				RefColumns: []*schema.Column{WorkspacesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workspaceuser_workspace_id_user_id",
				Unique:  true,
				Columns: []*schema.Column{WorkspaceUsersColumns[6], WorkspaceUsersColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminUsersTable,
		AppsTable,
		KachesTable,
		KeyvaluesTable,
		MailConnsTable,
		MediaTable,
		OauthConnectionsTable,
		PlansTable,
		PostsTable,
		PostCategoriesTable,
		PostStatusTable,
		PostTagsTable,
		PostTypesTable,
		SessionsTable,
		TempsTable,
		TemplsTable,
		TodosTable,
		UsersTable,
		WorkspacesTable,
		WorkspaceInvitesTable,
		WorkspaceUsersTable,
	}
)

func init() {
	PostsTable.ForeignKeys[0].RefTable = PostCategoriesTable
	PostsTable.ForeignKeys[1].RefTable = PostStatusTable
	PostsTable.ForeignKeys[2].RefTable = PostTypesTable
	PostStatusTable.ForeignKeys[0].RefTable = PostTypesTable
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
	TodosTable.ForeignKeys[0].RefTable = TodosTable
	WorkspaceInvitesTable.ForeignKeys[0].RefTable = WorkspacesTable
	WorkspaceUsersTable.ForeignKeys[0].RefTable = UsersTable
	WorkspaceUsersTable.ForeignKeys[1].RefTable = WorkspacesTable
}
