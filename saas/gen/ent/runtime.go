// Code generated by ent, DO NOT EDIT.

package ent

import (
	"saas/gen/ent/kache"
	"saas/gen/ent/user"
	"saas/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	kacheFields := schema.Kache{}.Fields()
	_ = kacheFields
	// kacheDescCreatedAt is the schema descriptor for created_at field.
	kacheDescCreatedAt := kacheFields[1].Descriptor()
	// kache.DefaultCreatedAt holds the default value on creation for the created_at field.
	kache.DefaultCreatedAt = kacheDescCreatedAt.Default.(func() time.Time)
	// kacheDescID is the schema descriptor for id field.
	kacheDescID := kacheFields[0].Descriptor()
	// kache.DefaultID holds the default value on creation for the id field.
	kache.DefaultID = kacheDescID.Default.(func() string)
	// kache.IDValidator is a validator for the "id" field. It is called by the builders before save.
	kache.IDValidator = func() func(string) error {
		validators := kacheDescID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(id string) error {
			for _, fn := range fns {
				if err := fn(id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userFields[7].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
}
