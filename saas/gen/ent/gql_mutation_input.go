// Code generated by ent, DO NOT EDIT.

package ent

// CreatePostInput represents a mutation input for creating posts.
type CreatePostInput struct {
	Name *string
	Slug *string

	FeaturedMediaIDs []string

	IconMediaIDs []string
}

// Mutate applies the CreatePostInput on the PostMutation builder.
func (i *CreatePostInput) Mutate(m *PostMutation) {
	if v := i.Name; v != nil {
		m.SetName(*v)
	}
	if v := i.Slug; v != nil {
		m.SetSlug(*v)
	}
	if v := i.FeaturedMediaIDs; len(v) > 0 {
		m.AddFeaturedMediaIDs(v...)
	}
	if v := i.IconMediaIDs; len(v) > 0 {
		m.AddIconMediaIDs(v...)
	}

}

// SetInput applies the change-set in the CreatePostInput on the PostCreate builder.
func (c *PostCreate) SetInput(i CreatePostInput) *PostCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdatePostInput represents a mutation input for updating posts.
type UpdatePostInput struct {
	ClearName              bool
	Name                   *string
	ClearSlug              bool
	Slug                   *string
	AddFeaturedMediaIDs    []string
	RemoveFeaturedMediaIDs []string
	ClearFeaturedMedias    bool
	SelectFeaturedMediaIDs []string

	AddIconMediaIDs    []string
	RemoveIconMediaIDs []string
	ClearIconMedias    bool
	SelectIconMediaIDs []string
}

// Mutate applies the UpdatePostInput on the PostMutation builder.
func (i *UpdatePostInput) Mutate(m *PostMutation) {
	if i.ClearName {
		m.ClearName()
	}
	if v := i.Name; v != nil {
		m.SetName(*v)
	}
	if i.ClearSlug {
		m.ClearSlug()
	}
	if v := i.Slug; v != nil {
		m.SetSlug(*v)
	}

	if i.ClearFeaturedMedias {
		m.ClearFeaturedMedias()
	}

	if v := i.AddFeaturedMediaIDs; len(v) > 0 {
		m.AddFeaturedMediaIDs(v...)
	}
	if v := i.RemoveFeaturedMediaIDs; len(v) > 0 {
		m.RemoveFeaturedMediaIDs(v...)
	}

	if v := i.SelectFeaturedMediaIDs; len(v) > 0 {
		m.SelectFeaturedMediaIDs(v...)
	}

	if i.ClearIconMedias {
		m.ClearIconMedias()
	}

	if v := i.AddIconMediaIDs; len(v) > 0 {
		m.AddIconMediaIDs(v...)
	}
	if v := i.RemoveIconMediaIDs; len(v) > 0 {
		m.RemoveIconMediaIDs(v...)
	}

	if v := i.SelectIconMediaIDs; len(v) > 0 {
		m.SelectIconMediaIDs(v...)
	}

}

// SetInput applies the change-set in the UpdatePostInput on the PostUpdate builder.
func (c *PostUpdate) SetInput(i UpdatePostInput) *PostUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdatePostInput on the PostUpdateOne builder.
func (c *PostUpdateOne) SetInput(i UpdatePostInput) *PostUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
