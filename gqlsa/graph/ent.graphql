directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type App implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  copyright: String
  email: String
  address: String
  socialTw: String
  socialFb: String
  socialIn: String
  logoURL: String
  siteURL: String
  defaultMailConnID: String
  mailLayoutTemplID: String
  wsapceInviteTemplID: String
  wsapceSuccessTemplID: String
  authFpTemplID: String
  authWelcomeEmailTemplID: String
  authVerificationTemplID: String
  authEmailVerify: String
  adminUserID: String
}
"""
A connection to a list of items.
"""
type AppConnection {
  """
  A list of edges.
  """
  edges: [AppEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type AppEdge {
  """
  The item at the end of the edge.
  """
  node: App
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for App connections
"""
input AppOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Apps.
  """
  field: AppOrderField!
}
"""
Properties by which App connections can be ordered.
"""
enum AppOrderField {
  CREATED_AT
}
"""
AppWhereInput is used for filtering App objects.
Input was generated by ent.
"""
input AppWhereInput {
  not: AppWhereInput
  and: [AppWhereInput!]
  or: [AppWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  copyright field predicates
  """
  copyright: String
  copyrightNEQ: String
  copyrightIn: [String!]
  copyrightNotIn: [String!]
  copyrightGT: String
  copyrightGTE: String
  copyrightLT: String
  copyrightLTE: String
  copyrightContains: String
  copyrightHasPrefix: String
  copyrightHasSuffix: String
  copyrightIsNil: Boolean
  copyrightNotNil: Boolean
  copyrightEqualFold: String
  copyrightContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  social_tw field predicates
  """
  socialTw: String
  socialTwNEQ: String
  socialTwIn: [String!]
  socialTwNotIn: [String!]
  socialTwGT: String
  socialTwGTE: String
  socialTwLT: String
  socialTwLTE: String
  socialTwContains: String
  socialTwHasPrefix: String
  socialTwHasSuffix: String
  socialTwIsNil: Boolean
  socialTwNotNil: Boolean
  socialTwEqualFold: String
  socialTwContainsFold: String
  """
  social_fb field predicates
  """
  socialFb: String
  socialFbNEQ: String
  socialFbIn: [String!]
  socialFbNotIn: [String!]
  socialFbGT: String
  socialFbGTE: String
  socialFbLT: String
  socialFbLTE: String
  socialFbContains: String
  socialFbHasPrefix: String
  socialFbHasSuffix: String
  socialFbIsNil: Boolean
  socialFbNotNil: Boolean
  socialFbEqualFold: String
  socialFbContainsFold: String
  """
  social_in field predicates
  """
  socialIn: String
  socialInNEQ: String
  socialInIn: [String!]
  socialInNotIn: [String!]
  socialInGT: String
  socialInGTE: String
  socialInLT: String
  socialInLTE: String
  socialInContains: String
  socialInHasPrefix: String
  socialInHasSuffix: String
  socialInIsNil: Boolean
  socialInNotNil: Boolean
  socialInEqualFold: String
  socialInContainsFold: String
  """
  logo_url field predicates
  """
  logoURL: String
  logoURLNEQ: String
  logoURLIn: [String!]
  logoURLNotIn: [String!]
  logoURLGT: String
  logoURLGTE: String
  logoURLLT: String
  logoURLLTE: String
  logoURLContains: String
  logoURLHasPrefix: String
  logoURLHasSuffix: String
  logoURLIsNil: Boolean
  logoURLNotNil: Boolean
  logoURLEqualFold: String
  logoURLContainsFold: String
  """
  site_url field predicates
  """
  siteURL: String
  siteURLNEQ: String
  siteURLIn: [String!]
  siteURLNotIn: [String!]
  siteURLGT: String
  siteURLGTE: String
  siteURLLT: String
  siteURLLTE: String
  siteURLContains: String
  siteURLHasPrefix: String
  siteURLHasSuffix: String
  siteURLIsNil: Boolean
  siteURLNotNil: Boolean
  siteURLEqualFold: String
  siteURLContainsFold: String
  """
  default_mail_conn_id field predicates
  """
  defaultMailConnID: String
  defaultMailConnIDNEQ: String
  defaultMailConnIDIn: [String!]
  defaultMailConnIDNotIn: [String!]
  defaultMailConnIDGT: String
  defaultMailConnIDGTE: String
  defaultMailConnIDLT: String
  defaultMailConnIDLTE: String
  defaultMailConnIDContains: String
  defaultMailConnIDHasPrefix: String
  defaultMailConnIDHasSuffix: String
  defaultMailConnIDIsNil: Boolean
  defaultMailConnIDNotNil: Boolean
  defaultMailConnIDEqualFold: String
  defaultMailConnIDContainsFold: String
  """
  mail_layout_templ_id field predicates
  """
  mailLayoutTemplID: String
  mailLayoutTemplIDNEQ: String
  mailLayoutTemplIDIn: [String!]
  mailLayoutTemplIDNotIn: [String!]
  mailLayoutTemplIDGT: String
  mailLayoutTemplIDGTE: String
  mailLayoutTemplIDLT: String
  mailLayoutTemplIDLTE: String
  mailLayoutTemplIDContains: String
  mailLayoutTemplIDHasPrefix: String
  mailLayoutTemplIDHasSuffix: String
  mailLayoutTemplIDIsNil: Boolean
  mailLayoutTemplIDNotNil: Boolean
  mailLayoutTemplIDEqualFold: String
  mailLayoutTemplIDContainsFold: String
  """
  wsapce_invite_templ_id field predicates
  """
  wsapceInviteTemplID: String
  wsapceInviteTemplIDNEQ: String
  wsapceInviteTemplIDIn: [String!]
  wsapceInviteTemplIDNotIn: [String!]
  wsapceInviteTemplIDGT: String
  wsapceInviteTemplIDGTE: String
  wsapceInviteTemplIDLT: String
  wsapceInviteTemplIDLTE: String
  wsapceInviteTemplIDContains: String
  wsapceInviteTemplIDHasPrefix: String
  wsapceInviteTemplIDHasSuffix: String
  wsapceInviteTemplIDIsNil: Boolean
  wsapceInviteTemplIDNotNil: Boolean
  wsapceInviteTemplIDEqualFold: String
  wsapceInviteTemplIDContainsFold: String
  """
  wsapce_success_templ_id field predicates
  """
  wsapceSuccessTemplID: String
  wsapceSuccessTemplIDNEQ: String
  wsapceSuccessTemplIDIn: [String!]
  wsapceSuccessTemplIDNotIn: [String!]
  wsapceSuccessTemplIDGT: String
  wsapceSuccessTemplIDGTE: String
  wsapceSuccessTemplIDLT: String
  wsapceSuccessTemplIDLTE: String
  wsapceSuccessTemplIDContains: String
  wsapceSuccessTemplIDHasPrefix: String
  wsapceSuccessTemplIDHasSuffix: String
  wsapceSuccessTemplIDIsNil: Boolean
  wsapceSuccessTemplIDNotNil: Boolean
  wsapceSuccessTemplIDEqualFold: String
  wsapceSuccessTemplIDContainsFold: String
  """
  auth_fp_templ_id field predicates
  """
  authFpTemplID: String
  authFpTemplIDNEQ: String
  authFpTemplIDIn: [String!]
  authFpTemplIDNotIn: [String!]
  authFpTemplIDGT: String
  authFpTemplIDGTE: String
  authFpTemplIDLT: String
  authFpTemplIDLTE: String
  authFpTemplIDContains: String
  authFpTemplIDHasPrefix: String
  authFpTemplIDHasSuffix: String
  authFpTemplIDIsNil: Boolean
  authFpTemplIDNotNil: Boolean
  authFpTemplIDEqualFold: String
  authFpTemplIDContainsFold: String
  """
  auth_welcome_email_templ_id field predicates
  """
  authWelcomeEmailTemplID: String
  authWelcomeEmailTemplIDNEQ: String
  authWelcomeEmailTemplIDIn: [String!]
  authWelcomeEmailTemplIDNotIn: [String!]
  authWelcomeEmailTemplIDGT: String
  authWelcomeEmailTemplIDGTE: String
  authWelcomeEmailTemplIDLT: String
  authWelcomeEmailTemplIDLTE: String
  authWelcomeEmailTemplIDContains: String
  authWelcomeEmailTemplIDHasPrefix: String
  authWelcomeEmailTemplIDHasSuffix: String
  authWelcomeEmailTemplIDIsNil: Boolean
  authWelcomeEmailTemplIDNotNil: Boolean
  authWelcomeEmailTemplIDEqualFold: String
  authWelcomeEmailTemplIDContainsFold: String
  """
  auth_verification_templ_id field predicates
  """
  authVerificationTemplID: String
  authVerificationTemplIDNEQ: String
  authVerificationTemplIDIn: [String!]
  authVerificationTemplIDNotIn: [String!]
  authVerificationTemplIDGT: String
  authVerificationTemplIDGTE: String
  authVerificationTemplIDLT: String
  authVerificationTemplIDLTE: String
  authVerificationTemplIDContains: String
  authVerificationTemplIDHasPrefix: String
  authVerificationTemplIDHasSuffix: String
  authVerificationTemplIDIsNil: Boolean
  authVerificationTemplIDNotNil: Boolean
  authVerificationTemplIDEqualFold: String
  authVerificationTemplIDContainsFold: String
  """
  auth_email_verify field predicates
  """
  authEmailVerify: String
  authEmailVerifyNEQ: String
  authEmailVerifyIn: [String!]
  authEmailVerifyNotIn: [String!]
  authEmailVerifyGT: String
  authEmailVerifyGTE: String
  authEmailVerifyLT: String
  authEmailVerifyLTE: String
  authEmailVerifyContains: String
  authEmailVerifyHasPrefix: String
  authEmailVerifyHasSuffix: String
  authEmailVerifyIsNil: Boolean
  authEmailVerifyNotNil: Boolean
  authEmailVerifyEqualFold: String
  authEmailVerifyContainsFold: String
  """
  admin_user_id field predicates
  """
  adminUserID: String
  adminUserIDNEQ: String
  adminUserIDIn: [String!]
  adminUserIDNotIn: [String!]
  adminUserIDGT: String
  adminUserIDGTE: String
  adminUserIDLT: String
  adminUserIDLTE: String
  adminUserIDContains: String
  adminUserIDHasPrefix: String
  adminUserIDHasSuffix: String
  adminUserIDIsNil: Boolean
  adminUserIDNotNil: Boolean
  adminUserIDEqualFold: String
  adminUserIDContainsFold: String
}
"""
CreateAppInput is used for create App object.
Input was generated by ent.
"""
input CreateAppInput {
  createdAt: Time
  updatedAt: Time
  name: String
  copyright: String
  email: String
  address: String
  socialTw: String
  socialFb: String
  socialIn: String
  logoURL: String
  siteURL: String
  defaultMailConnID: String
  mailLayoutTemplID: String
  wsapceInviteTemplID: String
  wsapceSuccessTemplID: String
  authFpTemplID: String
  authWelcomeEmailTemplID: String
  authVerificationTemplID: String
  authEmailVerify: String
  adminUserID: String
}
"""
CreateOauthConnectionInput is used for create OauthConnection object.
Input was generated by ent.
"""
input CreateOauthConnectionInput {
  createdAt: Time
  updatedAt: Time
  name: String
  provider: String
  clientID: String
  clientSecret: String
  scopes: String
  redirectURL: String
  dashboardLink: String
  note: String
  status: Boolean
}
"""
CreatePostCategoryInput is used for create PostCategory object.
Input was generated by ent.
"""
input CreatePostCategoryInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  postIDs: [ID!]
}
"""
CreatePostInput is used for create Post object.
Input was generated by ent.
"""
input CreatePostInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  headline: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  postStatusID: ID
  postTypeID: ID
  primaryCategoryID: ID
}
"""
CreatePostStatusInput is used for create PostStatus object.
Input was generated by ent.
"""
input CreatePostStatusInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: Boolean
  postTypeID: ID
}
"""
CreatePostTypeInput is used for create PostType object.
Input was generated by ent.
"""
input CreatePostTypeInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
}
"""
CreateTodoInput is used for create Todo object.
Input was generated by ent.
"""
input CreateTodoInput {
  createdAt: Time
  updatedAt: Time
  text: String!
  status: TodoStatus
  priority: Int
  childIDs: [ID!]
  parentID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  createdAt: Time
  updatedAt: Time
  email: String!
  phone: String
  firstName: String
  lastName: String
  company: String
  locale: String
  roleID: String
  status: Boolean
  password: String
  secret: String
  apiKey: String
  welcomeEmailSent: Boolean
  canAdmin: Boolean
  sessionIDs: [ID!]
  workspaceIDs: [ID!]
}
"""
CreateWorkspaceInput is used for create Workspace object.
Input was generated by ent.
"""
input CreateWorkspaceInput {
  createdAt: Time
  updatedAt: Time
  name: String
  isPersonal: Boolean
  userID: String
  userIDs: [ID!]
  workspaceInviteIDs: [ID!]
}
"""
CreateWorkspaceInviteInput is used for create WorkspaceInvite object.
Input was generated by ent.
"""
input CreateWorkspaceInviteInput {
  createdAt: Time
  updatedAt: Time
  email: String
  role: String
  workspaceID: ID
}
"""
CreateWorkspaceUserInput is used for create WorkspaceUser object.
Input was generated by ent.
"""
input CreateWorkspaceUserInput {
  createdAt: Time
  updatedAt: Time
  role: String
  userID: ID!
  workspaceID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "saas/gen/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
type OauthConnection implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  provider: String
  clientID: String
  clientSecret: String
  scopes: String
  redirectURL: String
  dashboardLink: String
  note: String
  status: Boolean
}
"""
A connection to a list of items.
"""
type OauthConnectionConnection {
  """
  A list of edges.
  """
  edges: [OauthConnectionEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OauthConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: OauthConnection
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for OauthConnection connections
"""
input OauthConnectionOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order OauthConnections.
  """
  field: OauthConnectionOrderField!
}
"""
Properties by which OauthConnection connections can be ordered.
"""
enum OauthConnectionOrderField {
  CREATED_AT
}
"""
OauthConnectionWhereInput is used for filtering OauthConnection objects.
Input was generated by ent.
"""
input OauthConnectionWhereInput {
  not: OauthConnectionWhereInput
  and: [OauthConnectionWhereInput!]
  or: [OauthConnectionWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  provider field predicates
  """
  provider: String
  providerNEQ: String
  providerIn: [String!]
  providerNotIn: [String!]
  providerGT: String
  providerGTE: String
  providerLT: String
  providerLTE: String
  providerContains: String
  providerHasPrefix: String
  providerHasSuffix: String
  providerIsNil: Boolean
  providerNotNil: Boolean
  providerEqualFold: String
  providerContainsFold: String
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDIsNil: Boolean
  clientIDNotNil: Boolean
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  client_secret field predicates
  """
  clientSecret: String
  clientSecretNEQ: String
  clientSecretIn: [String!]
  clientSecretNotIn: [String!]
  clientSecretGT: String
  clientSecretGTE: String
  clientSecretLT: String
  clientSecretLTE: String
  clientSecretContains: String
  clientSecretHasPrefix: String
  clientSecretHasSuffix: String
  clientSecretIsNil: Boolean
  clientSecretNotNil: Boolean
  clientSecretEqualFold: String
  clientSecretContainsFold: String
  """
  scopes field predicates
  """
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesIsNil: Boolean
  scopesNotNil: Boolean
  scopesEqualFold: String
  scopesContainsFold: String
  """
  redirect_url field predicates
  """
  redirectURL: String
  redirectURLNEQ: String
  redirectURLIn: [String!]
  redirectURLNotIn: [String!]
  redirectURLGT: String
  redirectURLGTE: String
  redirectURLLT: String
  redirectURLLTE: String
  redirectURLContains: String
  redirectURLHasPrefix: String
  redirectURLHasSuffix: String
  redirectURLIsNil: Boolean
  redirectURLNotNil: Boolean
  redirectURLEqualFold: String
  redirectURLContainsFold: String
  """
  dashboard_link field predicates
  """
  dashboardLink: String
  dashboardLinkNEQ: String
  dashboardLinkIn: [String!]
  dashboardLinkNotIn: [String!]
  dashboardLinkGT: String
  dashboardLinkGTE: String
  dashboardLinkLT: String
  dashboardLinkLTE: String
  dashboardLinkContains: String
  dashboardLinkHasPrefix: String
  dashboardLinkHasSuffix: String
  dashboardLinkIsNil: Boolean
  dashboardLinkNotNil: Boolean
  dashboardLinkEqualFold: String
  dashboardLinkContainsFold: String
  """
  note field predicates
  """
  note: String
  noteNEQ: String
  noteIn: [String!]
  noteNotIn: [String!]
  noteGT: String
  noteGTE: String
  noteLT: String
  noteLTE: String
  noteContains: String
  noteHasPrefix: String
  noteHasSuffix: String
  noteIsNil: Boolean
  noteNotNil: Boolean
  noteEqualFold: String
  noteContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Post implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  postStatusID: ID
  postTypeID: ID
  primaryCategoryID: ID
  headline: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  postStatus: PostStatus
  postType: PostType
  primaryCategory: PostCategory
}
type PostCategory implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  posts: [Post!]
}
"""
A connection to a list of items.
"""
type PostCategoryConnection {
  """
  A list of edges.
  """
  edges: [PostCategoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: PostCategory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostCategory connections
"""
input PostCategoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostCategories.
  """
  field: PostCategoryOrderField!
}
"""
Properties by which PostCategory connections can be ordered.
"""
enum PostCategoryOrderField {
  CREATED_AT
}
"""
PostCategoryWhereInput is used for filtering PostCategory objects.
Input was generated by ent.
"""
input PostCategoryWhereInput {
  not: PostCategoryWhereInput
  and: [PostCategoryWhereInput!]
  or: [PostCategoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
}
"""
A connection to a list of items.
"""
type PostConnection {
  """
  A list of edges.
  """
  edges: [PostEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostEdge {
  """
  The item at the end of the edge.
  """
  node: Post
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Post connections
"""
input PostOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Posts.
  """
  field: PostOrderField!
}
"""
Properties by which Post connections can be ordered.
"""
enum PostOrderField {
  CREATED_AT
}
type PostStatus implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: Boolean
  postTypeID: ID
  postType: PostType
  posts: [Post!]
}
"""
A connection to a list of items.
"""
type PostStatusConnection {
  """
  A list of edges.
  """
  edges: [PostStatusEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostStatusEdge {
  """
  The item at the end of the edge.
  """
  node: PostStatus
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostStatus connections
"""
input PostStatusOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostStatusSlice.
  """
  field: PostStatusOrderField!
}
"""
Properties by which PostStatus connections can be ordered.
"""
enum PostStatusOrderField {
  CREATED_AT
  NAME
  STATUS
  POST_TYPE_NAME
}
"""
PostStatusWhereInput is used for filtering PostStatus objects.
Input was generated by ent.
"""
input PostStatusWhereInput {
  not: PostStatusWhereInput
  and: [PostStatusWhereInput!]
  or: [PostStatusWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
  """
  post_type_id field predicates
  """
  postTypeID: ID
  postTypeIDNEQ: ID
  postTypeIDIn: [ID!]
  postTypeIDNotIn: [ID!]
  postTypeIDGT: ID
  postTypeIDGTE: ID
  postTypeIDLT: ID
  postTypeIDLTE: ID
  postTypeIDContains: ID
  postTypeIDHasPrefix: ID
  postTypeIDHasSuffix: ID
  postTypeIDIsNil: Boolean
  postTypeIDNotNil: Boolean
  postTypeIDEqualFold: ID
  postTypeIDContainsFold: ID
  """
  post_type edge predicates
  """
  hasPostType: Boolean
  hasPostTypeWith: [PostTypeWhereInput!]
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
}
type PostTag implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
}
"""
Ordering options for PostTag connections
"""
input PostTagOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostTags.
  """
  field: PostTagOrderField!
}
"""
Properties by which PostTag connections can be ordered.
"""
enum PostTagOrderField {
  CREATED_AT
}
"""
PostTagWhereInput is used for filtering PostTag objects.
Input was generated by ent.
"""
input PostTagWhereInput {
  not: PostTagWhereInput
  and: [PostTagWhereInput!]
  or: [PostTagWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
}
type PostType implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  posts: [Post!]
  postStatuses: [PostStatus!]
}
"""
A connection to a list of items.
"""
type PostTypeConnection {
  """
  A list of edges.
  """
  edges: [PostTypeEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostTypeEdge {
  """
  The item at the end of the edge.
  """
  node: PostType
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostType connections
"""
input PostTypeOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostTypes.
  """
  field: PostTypeOrderField!
}
"""
Properties by which PostType connections can be ordered.
"""
enum PostTypeOrderField {
  CREATED_AT
  NAME
  STATUS
}
"""
PostTypeWhereInput is used for filtering PostType objects.
Input was generated by ent.
"""
input PostTypeWhereInput {
  not: PostTypeWhereInput
  and: [PostTypeWhereInput!]
  or: [PostTypeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
  """
  post_statuses edge predicates
  """
  hasPostStatuses: Boolean
  hasPostStatusesWith: [PostStatusWhereInput!]
}
"""
PostWhereInput is used for filtering Post objects.
Input was generated by ent.
"""
input PostWhereInput {
  not: PostWhereInput
  and: [PostWhereInput!]
  or: [PostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  post_status_id field predicates
  """
  postStatusID: ID
  postStatusIDNEQ: ID
  postStatusIDIn: [ID!]
  postStatusIDNotIn: [ID!]
  postStatusIDGT: ID
  postStatusIDGTE: ID
  postStatusIDLT: ID
  postStatusIDLTE: ID
  postStatusIDContains: ID
  postStatusIDHasPrefix: ID
  postStatusIDHasSuffix: ID
  postStatusIDIsNil: Boolean
  postStatusIDNotNil: Boolean
  postStatusIDEqualFold: ID
  postStatusIDContainsFold: ID
  """
  post_type_id field predicates
  """
  postTypeID: ID
  postTypeIDNEQ: ID
  postTypeIDIn: [ID!]
  postTypeIDNotIn: [ID!]
  postTypeIDGT: ID
  postTypeIDGTE: ID
  postTypeIDLT: ID
  postTypeIDLTE: ID
  postTypeIDContains: ID
  postTypeIDHasPrefix: ID
  postTypeIDHasSuffix: ID
  postTypeIDIsNil: Boolean
  postTypeIDNotNil: Boolean
  postTypeIDEqualFold: ID
  postTypeIDContainsFold: ID
  """
  primary_category_id field predicates
  """
  primaryCategoryID: ID
  primaryCategoryIDNEQ: ID
  primaryCategoryIDIn: [ID!]
  primaryCategoryIDNotIn: [ID!]
  primaryCategoryIDGT: ID
  primaryCategoryIDGTE: ID
  primaryCategoryIDLT: ID
  primaryCategoryIDLTE: ID
  primaryCategoryIDContains: ID
  primaryCategoryIDHasPrefix: ID
  primaryCategoryIDHasSuffix: ID
  primaryCategoryIDIsNil: Boolean
  primaryCategoryIDNotNil: Boolean
  primaryCategoryIDEqualFold: ID
  primaryCategoryIDContainsFold: ID
  """
  headline field predicates
  """
  headline: String
  headlineNEQ: String
  headlineIn: [String!]
  headlineNotIn: [String!]
  headlineGT: String
  headlineGTE: String
  headlineLT: String
  headlineLTE: String
  headlineContains: String
  headlineHasPrefix: String
  headlineHasSuffix: String
  headlineIsNil: Boolean
  headlineNotNil: Boolean
  headlineEqualFold: String
  headlineContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  post_status edge predicates
  """
  hasPostStatus: Boolean
  hasPostStatusWith: [PostStatusWhereInput!]
  """
  post_type edge predicates
  """
  hasPostType: Boolean
  hasPostTypeWith: [PostTypeWhereInput!]
  """
  primary_category edge predicates
  """
  hasPrimaryCategory: Boolean
  hasPrimaryCategoryWith: [PostCategoryWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node @canAdmin
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]! @canAdmin
  apps(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Apps returned from the connection.
    """
    orderBy: [AppOrder!]

    """
    Filtering options for Apps returned from the connection.
    """
    where: AppWhereInput
  ): AppConnection! @canAdmin
  oauthConnections(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for OauthConnections returned from the connection.
    """
    orderBy: [OauthConnectionOrder!]

    """
    Filtering options for OauthConnections returned from the connection.
    """
    where: OauthConnectionWhereInput
  ): OauthConnectionConnection! @canApp
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Posts returned from the connection.
    """
    orderBy: [PostOrder!]

    """
    Filtering options for Posts returned from the connection.
    """
    where: PostWhereInput
  ): PostConnection! @canApp
  postCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostCategories returned from the connection.
    """
    orderBy: [PostCategoryOrder!]

    """
    Filtering options for PostCategories returned from the connection.
    """
    where: PostCategoryWhereInput
  ): PostCategoryConnection! @canApp
  postStatuses(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostStatusSlice returned from the connection.
    """
    orderBy: [PostStatusOrder!]

    """
    Filtering options for PostStatusSlice returned from the connection.
    """
    where: PostStatusWhereInput
  ): PostStatusConnection! @canApp
  postTypes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostTypes returned from the connection.
    """
    orderBy: [PostTypeOrder!]

    """
    Filtering options for PostTypes returned from the connection.
    """
    where: PostTypeWhereInput
  ): PostTypeConnection! @canApp
  todos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Todos returned from the connection.
    """
    orderBy: TodoOrder

    """
    Filtering options for Todos returned from the connection.
    """
    where: TodoWhereInput
  ): TodoConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: [UserOrder!]

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection! @canApp
  workspaces(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Workspaces returned from the connection.
    """
    orderBy: [WorkspaceOrder!]

    """
    Filtering options for Workspaces returned from the connection.
    """
    where: WorkspaceWhereInput
  ): WorkspaceConnection! @canApp
  workspaceInvites(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for WorkspaceInvites returned from the connection.
    """
    orderBy: [WorkspaceInviteOrder!]

    """
    Filtering options for WorkspaceInvites returned from the connection.
    """
    where: WorkspaceInviteWhereInput
  ): WorkspaceInviteConnection! @canApp
  workspaceUsers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for WorkspaceUsers returned from the connection.
    """
    orderBy: [WorkspaceUserOrder!]

    """
    Filtering options for WorkspaceUsers returned from the connection.
    """
    where: WorkspaceUserWhereInput
  ): WorkspaceUserConnection! @canApp
}
type Todo implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  text: String!
  status: TodoStatus!
  priority: Int!
  children: [Todo!]
  parent: Todo
}
"""
A connection to a list of items.
"""
type TodoConnection {
  """
  A list of edges.
  """
  edges: [TodoEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TodoEdge {
  """
  The item at the end of the edge.
  """
  node: Todo
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Todo connections
"""
input TodoOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Todos.
  """
  field: TodoOrderField!
}
"""
Properties by which Todo connections can be ordered.
"""
enum TodoOrderField {
  CREATED_AT
  TEXT
  STATUS
  PRIORITY
}
"""
TodoStatus is enum for the field status
"""
enum TodoStatus @goModel(model: "saas/gen/ent/todo.Status") {
  IN_PROGRESS
  COMPLETED
}
"""
TodoWhereInput is used for filtering Todo objects.
Input was generated by ent.
"""
input TodoWhereInput {
  not: TodoWhereInput
  and: [TodoWhereInput!]
  or: [TodoWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  text field predicates
  """
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
  """
  status field predicates
  """
  status: TodoStatus
  statusNEQ: TodoStatus
  statusIn: [TodoStatus!]
  statusNotIn: [TodoStatus!]
  """
  priority field predicates
  """
  priority: Int
  priorityNEQ: Int
  priorityIn: [Int!]
  priorityNotIn: [Int!]
  priorityGT: Int
  priorityGTE: Int
  priorityLT: Int
  priorityLTE: Int
  """
  children edge predicates
  """
  hasChildren: Boolean
  hasChildrenWith: [TodoWhereInput!]
  """
  parent edge predicates
  """
  hasParent: Boolean
  hasParentWith: [TodoWhereInput!]
}
"""
UpdateAppInput is used for update App object.
Input was generated by ent.
"""
input UpdateAppInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  copyright: String
  clearCopyright: Boolean
  email: String
  clearEmail: Boolean
  address: String
  clearAddress: Boolean
  socialTw: String
  clearSocialTw: Boolean
  socialFb: String
  clearSocialFb: Boolean
  socialIn: String
  clearSocialIn: Boolean
  logoURL: String
  clearLogoURL: Boolean
  siteURL: String
  clearSiteURL: Boolean
  defaultMailConnID: String
  clearDefaultMailConnID: Boolean
  mailLayoutTemplID: String
  clearMailLayoutTemplID: Boolean
  wsapceInviteTemplID: String
  clearWsapceInviteTemplID: Boolean
  wsapceSuccessTemplID: String
  clearWsapceSuccessTemplID: Boolean
  authFpTemplID: String
  clearAuthFpTemplID: Boolean
  authWelcomeEmailTemplID: String
  clearAuthWelcomeEmailTemplID: Boolean
  authVerificationTemplID: String
  clearAuthVerificationTemplID: Boolean
  authEmailVerify: String
  clearAuthEmailVerify: Boolean
  adminUserID: String
  clearAdminUserID: Boolean
}
"""
UpdateOauthConnectionInput is used for update OauthConnection object.
Input was generated by ent.
"""
input UpdateOauthConnectionInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  provider: String
  clearProvider: Boolean
  clientID: String
  clearClientID: Boolean
  clientSecret: String
  clearClientSecret: Boolean
  scopes: String
  clearScopes: Boolean
  redirectURL: String
  clearRedirectURL: Boolean
  dashboardLink: String
  clearDashboardLink: Boolean
  note: String
  clearNote: Boolean
  status: Boolean
  clearStatus: Boolean
}
"""
UpdatePostCategoryInput is used for update PostCategory object.
Input was generated by ent.
"""
input UpdatePostCategoryInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: String
  clearStatus: Boolean
  excerpt: String
  clearExcerpt: Boolean
  content: String
  clearContent: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
  addPostIDs: [ID!]
  removePostIDs: [ID!]
  clearPosts: Boolean
}
"""
UpdatePostInput is used for update Post object.
Input was generated by ent.
"""
input UpdatePostInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  headline: String
  clearHeadline: Boolean
  excerpt: String
  clearExcerpt: Boolean
  content: String
  clearContent: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
  postStatusID: ID
  clearPostStatus: Boolean
  postTypeID: ID
  clearPostType: Boolean
  primaryCategoryID: ID
  clearPrimaryCategory: Boolean
}
"""
UpdatePostStatusInput is used for update PostStatus object.
Input was generated by ent.
"""
input UpdatePostStatusInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: Boolean
  clearStatus: Boolean
  postTypeID: ID
  clearPostType: Boolean
}
"""
UpdatePostTypeInput is used for update PostType object.
Input was generated by ent.
"""
input UpdatePostTypeInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: String
  clearStatus: Boolean
  excerpt: String
  clearExcerpt: Boolean
  content: String
  clearContent: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
}
"""
UpdateTodoInput is used for update Todo object.
Input was generated by ent.
"""
input UpdateTodoInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  text: String
  status: TodoStatus
  priority: Int
  addChildIDs: [ID!]
  removeChildIDs: [ID!]
  clearChildren: Boolean
  parentID: ID
  clearParent: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  email: String
  phone: String
  clearPhone: Boolean
  firstName: String
  clearFirstName: Boolean
  lastName: String
  clearLastName: Boolean
  company: String
  clearCompany: Boolean
  locale: String
  clearLocale: Boolean
  roleID: String
  clearRoleID: Boolean
  status: Boolean
  clearStatus: Boolean
  password: String
  clearPassword: Boolean
  secret: String
  clearSecret: Boolean
  apiKey: String
  clearAPIKey: Boolean
  welcomeEmailSent: Boolean
  clearWelcomeEmailSent: Boolean
  canAdmin: Boolean
  clearCanAdmin: Boolean
  addSessionIDs: [ID!]
  removeSessionIDs: [ID!]
  clearSessions: Boolean
  addWorkspaceIDs: [ID!]
  removeWorkspaceIDs: [ID!]
  clearWorkspaces: Boolean
}
"""
UpdateWorkspaceInput is used for update Workspace object.
Input was generated by ent.
"""
input UpdateWorkspaceInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  isPersonal: Boolean
  clearIsPersonal: Boolean
  userID: String
  clearUserID: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addWorkspaceInviteIDs: [ID!]
  removeWorkspaceInviteIDs: [ID!]
  clearWorkspaceInvites: Boolean
}
"""
UpdateWorkspaceInviteInput is used for update WorkspaceInvite object.
Input was generated by ent.
"""
input UpdateWorkspaceInviteInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  email: String
  clearEmail: Boolean
  role: String
  clearRole: Boolean
  workspaceID: ID
  clearWorkspace: Boolean
}
"""
UpdateWorkspaceUserInput is used for update WorkspaceUser object.
Input was generated by ent.
"""
input UpdateWorkspaceUserInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  role: String
  clearRole: Boolean
  userID: ID
  workspaceID: ID
}
type User implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  email: String!
  phone: String
  firstName: String
  lastName: String
  company: String
  locale: String
  roleID: String
  status: Boolean
  apiKey: String
  welcomeEmailSent: Boolean
  canAdmin: Boolean
  workspaces: [Workspace!]
  workspaceUsers: [WorkspaceUser!]
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for User connections
"""
input UserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Users.
  """
  field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
  CREATED_AT
  EMAIL
  WELCOME_EMAIL_SENT
  CAN_ADMIN
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone field predicates
  """
  phone: String
  phoneNEQ: String
  phoneIn: [String!]
  phoneNotIn: [String!]
  phoneGT: String
  phoneGTE: String
  phoneLT: String
  phoneLTE: String
  phoneContains: String
  phoneHasPrefix: String
  phoneHasSuffix: String
  phoneIsNil: Boolean
  phoneNotNil: Boolean
  phoneEqualFold: String
  phoneContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameIsNil: Boolean
  firstNameNotNil: Boolean
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameIsNil: Boolean
  lastNameNotNil: Boolean
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  company field predicates
  """
  company: String
  companyNEQ: String
  companyIn: [String!]
  companyNotIn: [String!]
  companyGT: String
  companyGTE: String
  companyLT: String
  companyLTE: String
  companyContains: String
  companyHasPrefix: String
  companyHasSuffix: String
  companyIsNil: Boolean
  companyNotNil: Boolean
  companyEqualFold: String
  companyContainsFold: String
  """
  locale field predicates
  """
  locale: String
  localeNEQ: String
  localeIn: [String!]
  localeNotIn: [String!]
  localeGT: String
  localeGTE: String
  localeLT: String
  localeLTE: String
  localeContains: String
  localeHasPrefix: String
  localeHasSuffix: String
  localeIsNil: Boolean
  localeNotNil: Boolean
  localeEqualFold: String
  localeContainsFold: String
  """
  role_id field predicates
  """
  roleID: String
  roleIDNEQ: String
  roleIDIn: [String!]
  roleIDNotIn: [String!]
  roleIDGT: String
  roleIDGTE: String
  roleIDLT: String
  roleIDLTE: String
  roleIDContains: String
  roleIDHasPrefix: String
  roleIDHasSuffix: String
  roleIDIsNil: Boolean
  roleIDNotNil: Boolean
  roleIDEqualFold: String
  roleIDContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyIsNil: Boolean
  apiKeyNotNil: Boolean
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  welcome_email_sent field predicates
  """
  welcomeEmailSent: Boolean
  welcomeEmailSentNEQ: Boolean
  welcomeEmailSentIsNil: Boolean
  welcomeEmailSentNotNil: Boolean
  """
  can_admin field predicates
  """
  canAdmin: Boolean
  canAdminNEQ: Boolean
  canAdminIsNil: Boolean
  canAdminNotNil: Boolean
  """
  workspaces edge predicates
  """
  hasWorkspaces: Boolean
  hasWorkspacesWith: [WorkspaceWhereInput!]
  """
  workspace_users edge predicates
  """
  hasWorkspaceUsers: Boolean
  hasWorkspaceUsersWith: [WorkspaceUserWhereInput!]
}
type Workspace implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  isPersonal: Boolean
  userID: String
  users: [User!]
  workspaceInvites: [WorkspaceInvite!]
  workspaceUsers: [WorkspaceUser!]
}
"""
A connection to a list of items.
"""
type WorkspaceConnection {
  """
  A list of edges.
  """
  edges: [WorkspaceEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WorkspaceEdge {
  """
  The item at the end of the edge.
  """
  node: Workspace
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type WorkspaceInvite implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  workspaceID: ID
  email: String
  role: String
  workspace: Workspace
}
"""
A connection to a list of items.
"""
type WorkspaceInviteConnection {
  """
  A list of edges.
  """
  edges: [WorkspaceInviteEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WorkspaceInviteEdge {
  """
  The item at the end of the edge.
  """
  node: WorkspaceInvite
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for WorkspaceInvite connections
"""
input WorkspaceInviteOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order WorkspaceInvites.
  """
  field: WorkspaceInviteOrderField!
}
"""
Properties by which WorkspaceInvite connections can be ordered.
"""
enum WorkspaceInviteOrderField {
  CREATED_AT
}
"""
WorkspaceInviteWhereInput is used for filtering WorkspaceInvite objects.
Input was generated by ent.
"""
input WorkspaceInviteWhereInput {
  not: WorkspaceInviteWhereInput
  and: [WorkspaceInviteWhereInput!]
  or: [WorkspaceInviteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  workspace_id field predicates
  """
  workspaceID: ID
  workspaceIDNEQ: ID
  workspaceIDIn: [ID!]
  workspaceIDNotIn: [ID!]
  workspaceIDGT: ID
  workspaceIDGTE: ID
  workspaceIDLT: ID
  workspaceIDLTE: ID
  workspaceIDContains: ID
  workspaceIDHasPrefix: ID
  workspaceIDHasSuffix: ID
  workspaceIDIsNil: Boolean
  workspaceIDNotNil: Boolean
  workspaceIDEqualFold: ID
  workspaceIDContainsFold: ID
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  role field predicates
  """
  role: String
  roleNEQ: String
  roleIn: [String!]
  roleNotIn: [String!]
  roleGT: String
  roleGTE: String
  roleLT: String
  roleLTE: String
  roleContains: String
  roleHasPrefix: String
  roleHasSuffix: String
  roleIsNil: Boolean
  roleNotNil: Boolean
  roleEqualFold: String
  roleContainsFold: String
  """
  workspace edge predicates
  """
  hasWorkspace: Boolean
  hasWorkspaceWith: [WorkspaceWhereInput!]
}
"""
Ordering options for Workspace connections
"""
input WorkspaceOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Workspaces.
  """
  field: WorkspaceOrderField!
}
"""
Properties by which Workspace connections can be ordered.
"""
enum WorkspaceOrderField {
  CREATED_AT
  NAME
}
type WorkspaceUser implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  workspaceID: ID!
  userID: ID!
  role: String
  user: User!
  workspace: Workspace!
}
"""
A connection to a list of items.
"""
type WorkspaceUserConnection {
  """
  A list of edges.
  """
  edges: [WorkspaceUserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WorkspaceUserEdge {
  """
  The item at the end of the edge.
  """
  node: WorkspaceUser
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for WorkspaceUser connections
"""
input WorkspaceUserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order WorkspaceUsers.
  """
  field: WorkspaceUserOrderField!
}
"""
Properties by which WorkspaceUser connections can be ordered.
"""
enum WorkspaceUserOrderField {
  CREATED_AT
  USER_EMAIL
  WORKSPACE_NAME
}
"""
WorkspaceUserWhereInput is used for filtering WorkspaceUser objects.
Input was generated by ent.
"""
input WorkspaceUserWhereInput {
  not: WorkspaceUserWhereInput
  and: [WorkspaceUserWhereInput!]
  or: [WorkspaceUserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  role field predicates
  """
  role: String
  roleNEQ: String
  roleIn: [String!]
  roleNotIn: [String!]
  roleGT: String
  roleGTE: String
  roleLT: String
  roleLTE: String
  roleContains: String
  roleHasPrefix: String
  roleHasSuffix: String
  roleIsNil: Boolean
  roleNotNil: Boolean
  roleEqualFold: String
  roleContainsFold: String
}
"""
WorkspaceWhereInput is used for filtering Workspace objects.
Input was generated by ent.
"""
input WorkspaceWhereInput {
  not: WorkspaceWhereInput
  and: [WorkspaceWhereInput!]
  or: [WorkspaceWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  is_personal field predicates
  """
  isPersonal: Boolean
  isPersonalNEQ: Boolean
  isPersonalIsNil: Boolean
  isPersonalNotNil: Boolean
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  userIDEqualFold: String
  userIDContainsFold: String
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  workspace_invites edge predicates
  """
  hasWorkspaceInvites: Boolean
  hasWorkspaceInvitesWith: [WorkspaceInviteWhereInput!]
  """
  workspace_users edge predicates
  """
  hasWorkspaceUsers: Boolean
  hasWorkspaceUsersWith: [WorkspaceUserWhereInput!]
}
