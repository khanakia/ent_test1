directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreatePostInput is used for create Post object.
Input was generated by ent.
"""
input CreatePostInput {
  name: String
  slug: String
  featuredMediaIDs: [ID!]
  iconMediaIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Media implements Node {
  id: ID!
  appID: String
  disk: String
  directory: String
  name: String
  originalName: String
  extension: String
  mimeType: String
  aggregateType: String
  size: Uint
  description: String
  isVariant: Boolean
  variantName: String
  originalMediaID: String
  checksum: String
  workspaceID: String!
  alt: String
  uid: String
  status: Boolean
  mediables: [Mediable!]
}
type Mediable implements Node {
  id: ID!
  appID: String
  mediaID: ID
  mediableID: String
  mediableType: String
  tag: String
  order: Int
  media: Media
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "saas/gen/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Post implements Node {
  id: ID!
  name: String
  slug: String
  mediables: [Mediable!]
}
"""
PostWhereInput is used for filtering Post objects.
Input was generated by ent.
"""
input PostWhereInput {
  not: PostWhereInput
  and: [PostWhereInput!]
  or: [PostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  posts: [Post!]!
}
"""
UpdatePostInput is used for update Post object.
Input was generated by ent.
"""
input UpdatePostInput {
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  selectFeaturedMediaIDs: [ID!]
  addFeaturedMediaIDs: [ID!]
  removeFeaturedMediaIDs: [ID!]
  clearFeaturedMedias: Boolean
  selectIconMediaIDs: [ID!]
  addIconMediaIDs: [ID!]
  removeIconMediaIDs: [ID!]
  clearIconMedias: Boolean
}
