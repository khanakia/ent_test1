directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type App implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  name: String
  copyright: String
  email: String
  address: String
  socialTw: String
  socialFb: String
  socialIn: String
  logoURL: String
  siteURL: String
  defaultMailConnID: ID
  mailLayoutTemplID: ID
  wsapceInviteTemplID: ID
  wsapceSuccessTemplID: ID
  authFpTemplID: ID
  authWelcomeEmailTemplID: ID
  authVerificationTemplID: ID
  authEmailVerify: Boolean
  oauthSigninCanSignup: Boolean
  authEnablePasswordLogin: Boolean
  adminUserID: String
  defaultMailConn: MailConn
  mailLayoutTempl: Templ
  wsapceInviteTempl: Templ
  wsapceSuccessTempl: Templ
  authFpTempl: Templ
  authWelcomeEmailTempl: Templ
  authVerificationTempl: Templ
}
"""
A connection to a list of items.
"""
type AppConnection {
  """
  A list of edges.
  """
  edges: [AppEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type AppEdge {
  """
  The item at the end of the edge.
  """
  node: App
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for App connections
"""
input AppOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Apps.
  """
  field: AppOrderField!
}
"""
Properties by which App connections can be ordered.
"""
enum AppOrderField {
  CREATED_AT
}
"""
AppWhereInput is used for filtering App objects.
Input was generated by ent.
"""
input AppWhereInput {
  not: AppWhereInput
  and: [AppWhereInput!]
  or: [AppWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  copyright field predicates
  """
  copyright: String
  copyrightNEQ: String
  copyrightIn: [String!]
  copyrightNotIn: [String!]
  copyrightGT: String
  copyrightGTE: String
  copyrightLT: String
  copyrightLTE: String
  copyrightContains: String
  copyrightHasPrefix: String
  copyrightHasSuffix: String
  copyrightIsNil: Boolean
  copyrightNotNil: Boolean
  copyrightEqualFold: String
  copyrightContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  social_tw field predicates
  """
  socialTw: String
  socialTwNEQ: String
  socialTwIn: [String!]
  socialTwNotIn: [String!]
  socialTwGT: String
  socialTwGTE: String
  socialTwLT: String
  socialTwLTE: String
  socialTwContains: String
  socialTwHasPrefix: String
  socialTwHasSuffix: String
  socialTwIsNil: Boolean
  socialTwNotNil: Boolean
  socialTwEqualFold: String
  socialTwContainsFold: String
  """
  social_fb field predicates
  """
  socialFb: String
  socialFbNEQ: String
  socialFbIn: [String!]
  socialFbNotIn: [String!]
  socialFbGT: String
  socialFbGTE: String
  socialFbLT: String
  socialFbLTE: String
  socialFbContains: String
  socialFbHasPrefix: String
  socialFbHasSuffix: String
  socialFbIsNil: Boolean
  socialFbNotNil: Boolean
  socialFbEqualFold: String
  socialFbContainsFold: String
  """
  social_in field predicates
  """
  socialIn: String
  socialInNEQ: String
  socialInIn: [String!]
  socialInNotIn: [String!]
  socialInGT: String
  socialInGTE: String
  socialInLT: String
  socialInLTE: String
  socialInContains: String
  socialInHasPrefix: String
  socialInHasSuffix: String
  socialInIsNil: Boolean
  socialInNotNil: Boolean
  socialInEqualFold: String
  socialInContainsFold: String
  """
  logo_url field predicates
  """
  logoURL: String
  logoURLNEQ: String
  logoURLIn: [String!]
  logoURLNotIn: [String!]
  logoURLGT: String
  logoURLGTE: String
  logoURLLT: String
  logoURLLTE: String
  logoURLContains: String
  logoURLHasPrefix: String
  logoURLHasSuffix: String
  logoURLIsNil: Boolean
  logoURLNotNil: Boolean
  logoURLEqualFold: String
  logoURLContainsFold: String
  """
  site_url field predicates
  """
  siteURL: String
  siteURLNEQ: String
  siteURLIn: [String!]
  siteURLNotIn: [String!]
  siteURLGT: String
  siteURLGTE: String
  siteURLLT: String
  siteURLLTE: String
  siteURLContains: String
  siteURLHasPrefix: String
  siteURLHasSuffix: String
  siteURLIsNil: Boolean
  siteURLNotNil: Boolean
  siteURLEqualFold: String
  siteURLContainsFold: String
  """
  default_mail_conn_id field predicates
  """
  defaultMailConnID: ID
  defaultMailConnIDNEQ: ID
  defaultMailConnIDIn: [ID!]
  defaultMailConnIDNotIn: [ID!]
  defaultMailConnIDGT: ID
  defaultMailConnIDGTE: ID
  defaultMailConnIDLT: ID
  defaultMailConnIDLTE: ID
  defaultMailConnIDContains: ID
  defaultMailConnIDHasPrefix: ID
  defaultMailConnIDHasSuffix: ID
  defaultMailConnIDIsNil: Boolean
  defaultMailConnIDNotNil: Boolean
  defaultMailConnIDEqualFold: ID
  defaultMailConnIDContainsFold: ID
  """
  mail_layout_templ_id field predicates
  """
  mailLayoutTemplID: ID
  mailLayoutTemplIDNEQ: ID
  mailLayoutTemplIDIn: [ID!]
  mailLayoutTemplIDNotIn: [ID!]
  mailLayoutTemplIDGT: ID
  mailLayoutTemplIDGTE: ID
  mailLayoutTemplIDLT: ID
  mailLayoutTemplIDLTE: ID
  mailLayoutTemplIDContains: ID
  mailLayoutTemplIDHasPrefix: ID
  mailLayoutTemplIDHasSuffix: ID
  mailLayoutTemplIDIsNil: Boolean
  mailLayoutTemplIDNotNil: Boolean
  mailLayoutTemplIDEqualFold: ID
  mailLayoutTemplIDContainsFold: ID
  """
  wsapce_invite_templ_id field predicates
  """
  wsapceInviteTemplID: ID
  wsapceInviteTemplIDNEQ: ID
  wsapceInviteTemplIDIn: [ID!]
  wsapceInviteTemplIDNotIn: [ID!]
  wsapceInviteTemplIDGT: ID
  wsapceInviteTemplIDGTE: ID
  wsapceInviteTemplIDLT: ID
  wsapceInviteTemplIDLTE: ID
  wsapceInviteTemplIDContains: ID
  wsapceInviteTemplIDHasPrefix: ID
  wsapceInviteTemplIDHasSuffix: ID
  wsapceInviteTemplIDIsNil: Boolean
  wsapceInviteTemplIDNotNil: Boolean
  wsapceInviteTemplIDEqualFold: ID
  wsapceInviteTemplIDContainsFold: ID
  """
  wsapce_success_templ_id field predicates
  """
  wsapceSuccessTemplID: ID
  wsapceSuccessTemplIDNEQ: ID
  wsapceSuccessTemplIDIn: [ID!]
  wsapceSuccessTemplIDNotIn: [ID!]
  wsapceSuccessTemplIDGT: ID
  wsapceSuccessTemplIDGTE: ID
  wsapceSuccessTemplIDLT: ID
  wsapceSuccessTemplIDLTE: ID
  wsapceSuccessTemplIDContains: ID
  wsapceSuccessTemplIDHasPrefix: ID
  wsapceSuccessTemplIDHasSuffix: ID
  wsapceSuccessTemplIDIsNil: Boolean
  wsapceSuccessTemplIDNotNil: Boolean
  wsapceSuccessTemplIDEqualFold: ID
  wsapceSuccessTemplIDContainsFold: ID
  """
  auth_fp_templ_id field predicates
  """
  authFpTemplID: ID
  authFpTemplIDNEQ: ID
  authFpTemplIDIn: [ID!]
  authFpTemplIDNotIn: [ID!]
  authFpTemplIDGT: ID
  authFpTemplIDGTE: ID
  authFpTemplIDLT: ID
  authFpTemplIDLTE: ID
  authFpTemplIDContains: ID
  authFpTemplIDHasPrefix: ID
  authFpTemplIDHasSuffix: ID
  authFpTemplIDIsNil: Boolean
  authFpTemplIDNotNil: Boolean
  authFpTemplIDEqualFold: ID
  authFpTemplIDContainsFold: ID
  """
  auth_welcome_email_templ_id field predicates
  """
  authWelcomeEmailTemplID: ID
  authWelcomeEmailTemplIDNEQ: ID
  authWelcomeEmailTemplIDIn: [ID!]
  authWelcomeEmailTemplIDNotIn: [ID!]
  authWelcomeEmailTemplIDGT: ID
  authWelcomeEmailTemplIDGTE: ID
  authWelcomeEmailTemplIDLT: ID
  authWelcomeEmailTemplIDLTE: ID
  authWelcomeEmailTemplIDContains: ID
  authWelcomeEmailTemplIDHasPrefix: ID
  authWelcomeEmailTemplIDHasSuffix: ID
  authWelcomeEmailTemplIDIsNil: Boolean
  authWelcomeEmailTemplIDNotNil: Boolean
  authWelcomeEmailTemplIDEqualFold: ID
  authWelcomeEmailTemplIDContainsFold: ID
  """
  auth_verification_templ_id field predicates
  """
  authVerificationTemplID: ID
  authVerificationTemplIDNEQ: ID
  authVerificationTemplIDIn: [ID!]
  authVerificationTemplIDNotIn: [ID!]
  authVerificationTemplIDGT: ID
  authVerificationTemplIDGTE: ID
  authVerificationTemplIDLT: ID
  authVerificationTemplIDLTE: ID
  authVerificationTemplIDContains: ID
  authVerificationTemplIDHasPrefix: ID
  authVerificationTemplIDHasSuffix: ID
  authVerificationTemplIDIsNil: Boolean
  authVerificationTemplIDNotNil: Boolean
  authVerificationTemplIDEqualFold: ID
  authVerificationTemplIDContainsFold: ID
  """
  auth_email_verify field predicates
  """
  authEmailVerify: Boolean
  authEmailVerifyNEQ: Boolean
  authEmailVerifyIsNil: Boolean
  authEmailVerifyNotNil: Boolean
  """
  oauth_signin_can_signup field predicates
  """
  oauthSigninCanSignup: Boolean
  oauthSigninCanSignupNEQ: Boolean
  oauthSigninCanSignupIsNil: Boolean
  oauthSigninCanSignupNotNil: Boolean
  """
  auth_enable_password_login field predicates
  """
  authEnablePasswordLogin: Boolean
  authEnablePasswordLoginNEQ: Boolean
  authEnablePasswordLoginIsNil: Boolean
  authEnablePasswordLoginNotNil: Boolean
  """
  admin_user_id field predicates
  """
  adminUserID: String
  adminUserIDNEQ: String
  adminUserIDIn: [String!]
  adminUserIDNotIn: [String!]
  adminUserIDGT: String
  adminUserIDGTE: String
  adminUserIDLT: String
  adminUserIDLTE: String
  adminUserIDContains: String
  adminUserIDHasPrefix: String
  adminUserIDHasSuffix: String
  adminUserIDIsNil: Boolean
  adminUserIDNotNil: Boolean
  adminUserIDEqualFold: String
  adminUserIDContainsFold: String
  """
  default_mail_conn edge predicates
  """
  hasDefaultMailConn: Boolean
  hasDefaultMailConnWith: [MailConnWhereInput!]
  """
  mail_layout_templ edge predicates
  """
  hasMailLayoutTempl: Boolean
  hasMailLayoutTemplWith: [TemplWhereInput!]
  """
  wsapce_invite_templ edge predicates
  """
  hasWsapceInviteTempl: Boolean
  hasWsapceInviteTemplWith: [TemplWhereInput!]
  """
  wsapce_success_templ edge predicates
  """
  hasWsapceSuccessTempl: Boolean
  hasWsapceSuccessTemplWith: [TemplWhereInput!]
  """
  auth_fp_templ edge predicates
  """
  hasAuthFpTempl: Boolean
  hasAuthFpTemplWith: [TemplWhereInput!]
  """
  auth_welcome_email_templ edge predicates
  """
  hasAuthWelcomeEmailTempl: Boolean
  hasAuthWelcomeEmailTemplWith: [TemplWhereInput!]
  """
  auth_verification_templ edge predicates
  """
  hasAuthVerificationTempl: Boolean
  hasAuthVerificationTemplWith: [TemplWhereInput!]
}
"""
CreateAppInput is used for create App object.
Input was generated by ent.
"""
input CreateAppInput {
  createdAt: Time
  updatedAt: Time
  name: String
  copyright: String
  email: String
  address: String
  socialTw: String
  socialFb: String
  socialIn: String
  logoURL: String
  siteURL: String
  authEmailVerify: Boolean
  oauthSigninCanSignup: Boolean
  authEnablePasswordLogin: Boolean
  adminUserID: String
  defaultMailConnID: ID
  mailLayoutTemplID: ID
  wsapceInviteTemplID: ID
  wsapceSuccessTemplID: ID
  authFpTemplID: ID
  authWelcomeEmailTemplID: ID
  authVerificationTemplID: ID
}
"""
CreateMailConnInput is used for create MailConn object.
Input was generated by ent.
"""
input CreateMailConnInput {
  createdAt: Time
  updatedAt: Time
  name: String
  host: String
  port: Int
  username: String
  password: String
  encryption: Int
  fromName: String
  fromEmail: String
  status: Boolean
}
"""
CreateOauthConnectionInput is used for create OauthConnection object.
Input was generated by ent.
"""
input CreateOauthConnectionInput {
  createdAt: Time
  updatedAt: Time
  name: String
  provider: String
  clientID: String
  clientSecret: String
  scopes: String
  redirectURL: String
  dashboardLink: String
  note: String
  status: Boolean
}
"""
CreatePostCategoryInput is used for create PostCategory object.
Input was generated by ent.
"""
input CreatePostCategoryInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  postIDs: [ID!]
  parentID: ID
  childIDs: [ID!]
}
"""
CreatePostInput is used for create Post object.
Input was generated by ent.
"""
input CreatePostInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  headline: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  custom: Map
  postStatusID: ID
  postTypeID: ID
  primaryCategoryID: ID
  postTagIDs: [ID!]
}
"""
CreatePostStatusInput is used for create PostStatus object.
Input was generated by ent.
"""
input CreatePostStatusInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: Boolean
  postTypeID: ID
}
"""
CreatePostTagInput is used for create PostTag object.
Input was generated by ent.
"""
input CreatePostTagInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  postIDs: [ID!]
}
"""
CreatePostTypeFormInput is used for create PostTypeForm object.
Input was generated by ent.
"""
input CreatePostTypeFormInput {
  createdAt: Time
  updatedAt: Time
  name: String
  status: Boolean
  body: JsonSlice
  postTypeID: ID
}
"""
CreatePostTypeInput is used for create PostType object.
Input was generated by ent.
"""
input CreatePostTypeInput {
  createdAt: Time
  updatedAt: Time
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
}
"""
CreateTemplInput is used for create Templ object.
Input was generated by ent.
"""
input CreateTemplInput {
  createdAt: Time
  updatedAt: Time
  name: String
  body: String
  compiled: String
  status: Boolean
}
"""
CreateTodoInput is used for create Todo object.
Input was generated by ent.
"""
input CreateTodoInput {
  createdAt: Time
  updatedAt: Time
  text: String!
  status: TodoStatus
  priority: Int
  childIDs: [ID!]
  parentID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  createdAt: Time
  updatedAt: Time
  email: String!
  phone: String
  firstName: String
  lastName: String
  company: String
  locale: String
  roleID: String
  status: Boolean
  password: String
  secret: String
  apiKey: String
  welcomeEmailSent: Boolean
  canAdmin: Boolean
  sessionIDs: [ID!]
  workspaceIDs: [ID!]
}
"""
CreateWorkspaceInput is used for create Workspace object.
Input was generated by ent.
"""
input CreateWorkspaceInput {
  createdAt: Time
  updatedAt: Time
  name: String
  isPersonal: Boolean
  userID: String
  userIDs: [ID!]
  workspaceInviteIDs: [ID!]
}
"""
CreateWorkspaceInviteInput is used for create WorkspaceInvite object.
Input was generated by ent.
"""
input CreateWorkspaceInviteInput {
  createdAt: Time
  updatedAt: Time
  email: String
  role: String
  workspaceID: ID
}
"""
CreateWorkspaceUserInput is used for create WorkspaceUser object.
Input was generated by ent.
"""
input CreateWorkspaceUserInput {
  createdAt: Time
  updatedAt: Time
  role: String
  userID: ID!
  workspaceID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type MailConn implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  host: String
  port: Int
  username: String
  password: String
  encryption: Int
  fromName: String
  fromEmail: String
  status: Boolean
}
"""
A connection to a list of items.
"""
type MailConnConnection {
  """
  A list of edges.
  """
  edges: [MailConnEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type MailConnEdge {
  """
  The item at the end of the edge.
  """
  node: MailConn
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for MailConn connections
"""
input MailConnOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order MailConns.
  """
  field: MailConnOrderField!
}
"""
Properties by which MailConn connections can be ordered.
"""
enum MailConnOrderField {
  CREATED_AT
}
"""
MailConnWhereInput is used for filtering MailConn objects.
Input was generated by ent.
"""
input MailConnWhereInput {
  not: MailConnWhereInput
  and: [MailConnWhereInput!]
  or: [MailConnWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  host field predicates
  """
  host: String
  hostNEQ: String
  hostIn: [String!]
  hostNotIn: [String!]
  hostGT: String
  hostGTE: String
  hostLT: String
  hostLTE: String
  hostContains: String
  hostHasPrefix: String
  hostHasSuffix: String
  hostIsNil: Boolean
  hostNotNil: Boolean
  hostEqualFold: String
  hostContainsFold: String
  """
  port field predicates
  """
  port: Int
  portNEQ: Int
  portIn: [Int!]
  portNotIn: [Int!]
  portGT: Int
  portGTE: Int
  portLT: Int
  portLTE: Int
  portIsNil: Boolean
  portNotNil: Boolean
  """
  username field predicates
  """
  username: String
  usernameNEQ: String
  usernameIn: [String!]
  usernameNotIn: [String!]
  usernameGT: String
  usernameGTE: String
  usernameLT: String
  usernameLTE: String
  usernameContains: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameIsNil: Boolean
  usernameNotNil: Boolean
  usernameEqualFold: String
  usernameContainsFold: String
  """
  password field predicates
  """
  password: String
  passwordNEQ: String
  passwordIn: [String!]
  passwordNotIn: [String!]
  passwordGT: String
  passwordGTE: String
  passwordLT: String
  passwordLTE: String
  passwordContains: String
  passwordHasPrefix: String
  passwordHasSuffix: String
  passwordIsNil: Boolean
  passwordNotNil: Boolean
  passwordEqualFold: String
  passwordContainsFold: String
  """
  encryption field predicates
  """
  encryption: Int
  encryptionNEQ: Int
  encryptionIn: [Int!]
  encryptionNotIn: [Int!]
  encryptionGT: Int
  encryptionGTE: Int
  encryptionLT: Int
  encryptionLTE: Int
  encryptionIsNil: Boolean
  encryptionNotNil: Boolean
  """
  from_name field predicates
  """
  fromName: String
  fromNameNEQ: String
  fromNameIn: [String!]
  fromNameNotIn: [String!]
  fromNameGT: String
  fromNameGTE: String
  fromNameLT: String
  fromNameLTE: String
  fromNameContains: String
  fromNameHasPrefix: String
  fromNameHasSuffix: String
  fromNameIsNil: Boolean
  fromNameNotNil: Boolean
  fromNameEqualFold: String
  fromNameContainsFold: String
  """
  from_email field predicates
  """
  fromEmail: String
  fromEmailNEQ: String
  fromEmailIn: [String!]
  fromEmailNotIn: [String!]
  fromEmailGT: String
  fromEmailGTE: String
  fromEmailLT: String
  fromEmailLTE: String
  fromEmailContains: String
  fromEmailHasPrefix: String
  fromEmailHasSuffix: String
  fromEmailIsNil: Boolean
  fromEmailNotNil: Boolean
  fromEmailEqualFold: String
  fromEmailContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
}
type Media implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  disk: String
  directory: String
  name: String
  originalName: String
  extension: String
  mimeType: String
  aggregateType: String
  size: Uint
  description: String
  isVariant: Boolean
  variantName: String
  originalMediaID: String
  checksum: String
  workspaceID: String!
  alt: String
  uid: String
  status: Boolean
}
"""
A connection to a list of items.
"""
type MediaConnection {
  """
  A list of edges.
  """
  edges: [MediaEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type MediaEdge {
  """
  The item at the end of the edge.
  """
  node: Media
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Media connections
"""
input MediaOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order MediaSlice.
  """
  field: MediaOrderField!
}
"""
Properties by which Media connections can be ordered.
"""
enum MediaOrderField {
  CREATED_AT
}
"""
MediaWhereInput is used for filtering Media objects.
Input was generated by ent.
"""
input MediaWhereInput {
  not: MediaWhereInput
  and: [MediaWhereInput!]
  or: [MediaWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  disk field predicates
  """
  disk: String
  diskNEQ: String
  diskIn: [String!]
  diskNotIn: [String!]
  diskGT: String
  diskGTE: String
  diskLT: String
  diskLTE: String
  diskContains: String
  diskHasPrefix: String
  diskHasSuffix: String
  diskIsNil: Boolean
  diskNotNil: Boolean
  diskEqualFold: String
  diskContainsFold: String
  """
  directory field predicates
  """
  directory: String
  directoryNEQ: String
  directoryIn: [String!]
  directoryNotIn: [String!]
  directoryGT: String
  directoryGTE: String
  directoryLT: String
  directoryLTE: String
  directoryContains: String
  directoryHasPrefix: String
  directoryHasSuffix: String
  directoryIsNil: Boolean
  directoryNotNil: Boolean
  directoryEqualFold: String
  directoryContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  original_name field predicates
  """
  originalName: String
  originalNameNEQ: String
  originalNameIn: [String!]
  originalNameNotIn: [String!]
  originalNameGT: String
  originalNameGTE: String
  originalNameLT: String
  originalNameLTE: String
  originalNameContains: String
  originalNameHasPrefix: String
  originalNameHasSuffix: String
  originalNameIsNil: Boolean
  originalNameNotNil: Boolean
  originalNameEqualFold: String
  originalNameContainsFold: String
  """
  extension field predicates
  """
  extension: String
  extensionNEQ: String
  extensionIn: [String!]
  extensionNotIn: [String!]
  extensionGT: String
  extensionGTE: String
  extensionLT: String
  extensionLTE: String
  extensionContains: String
  extensionHasPrefix: String
  extensionHasSuffix: String
  extensionIsNil: Boolean
  extensionNotNil: Boolean
  extensionEqualFold: String
  extensionContainsFold: String
  """
  mime_type field predicates
  """
  mimeType: String
  mimeTypeNEQ: String
  mimeTypeIn: [String!]
  mimeTypeNotIn: [String!]
  mimeTypeGT: String
  mimeTypeGTE: String
  mimeTypeLT: String
  mimeTypeLTE: String
  mimeTypeContains: String
  mimeTypeHasPrefix: String
  mimeTypeHasSuffix: String
  mimeTypeIsNil: Boolean
  mimeTypeNotNil: Boolean
  mimeTypeEqualFold: String
  mimeTypeContainsFold: String
  """
  aggregate_type field predicates
  """
  aggregateType: String
  aggregateTypeNEQ: String
  aggregateTypeIn: [String!]
  aggregateTypeNotIn: [String!]
  aggregateTypeGT: String
  aggregateTypeGTE: String
  aggregateTypeLT: String
  aggregateTypeLTE: String
  aggregateTypeContains: String
  aggregateTypeHasPrefix: String
  aggregateTypeHasSuffix: String
  aggregateTypeIsNil: Boolean
  aggregateTypeNotNil: Boolean
  aggregateTypeEqualFold: String
  aggregateTypeContainsFold: String
  """
  size field predicates
  """
  size: Uint
  sizeNEQ: Uint
  sizeIn: [Uint!]
  sizeNotIn: [Uint!]
  sizeGT: Uint
  sizeGTE: Uint
  sizeLT: Uint
  sizeLTE: Uint
  sizeIsNil: Boolean
  sizeNotNil: Boolean
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  is_variant field predicates
  """
  isVariant: Boolean
  isVariantNEQ: Boolean
  isVariantIsNil: Boolean
  isVariantNotNil: Boolean
  """
  variant_name field predicates
  """
  variantName: String
  variantNameNEQ: String
  variantNameIn: [String!]
  variantNameNotIn: [String!]
  variantNameGT: String
  variantNameGTE: String
  variantNameLT: String
  variantNameLTE: String
  variantNameContains: String
  variantNameHasPrefix: String
  variantNameHasSuffix: String
  variantNameIsNil: Boolean
  variantNameNotNil: Boolean
  variantNameEqualFold: String
  variantNameContainsFold: String
  """
  original_media_id field predicates
  """
  originalMediaID: String
  originalMediaIDNEQ: String
  originalMediaIDIn: [String!]
  originalMediaIDNotIn: [String!]
  originalMediaIDGT: String
  originalMediaIDGTE: String
  originalMediaIDLT: String
  originalMediaIDLTE: String
  originalMediaIDContains: String
  originalMediaIDHasPrefix: String
  originalMediaIDHasSuffix: String
  originalMediaIDIsNil: Boolean
  originalMediaIDNotNil: Boolean
  originalMediaIDEqualFold: String
  originalMediaIDContainsFold: String
  """
  checksum field predicates
  """
  checksum: String
  checksumNEQ: String
  checksumIn: [String!]
  checksumNotIn: [String!]
  checksumGT: String
  checksumGTE: String
  checksumLT: String
  checksumLTE: String
  checksumContains: String
  checksumHasPrefix: String
  checksumHasSuffix: String
  checksumIsNil: Boolean
  checksumNotNil: Boolean
  checksumEqualFold: String
  checksumContainsFold: String
  """
  workspace_id field predicates
  """
  workspaceID: String
  workspaceIDNEQ: String
  workspaceIDIn: [String!]
  workspaceIDNotIn: [String!]
  workspaceIDGT: String
  workspaceIDGTE: String
  workspaceIDLT: String
  workspaceIDLTE: String
  workspaceIDContains: String
  workspaceIDHasPrefix: String
  workspaceIDHasSuffix: String
  workspaceIDEqualFold: String
  workspaceIDContainsFold: String
  """
  alt field predicates
  """
  alt: String
  altNEQ: String
  altIn: [String!]
  altNotIn: [String!]
  altGT: String
  altGTE: String
  altLT: String
  altLTE: String
  altContains: String
  altHasPrefix: String
  altHasSuffix: String
  altIsNil: Boolean
  altNotNil: Boolean
  altEqualFold: String
  altContainsFold: String
  """
  uid field predicates
  """
  uid: String
  uidNEQ: String
  uidIn: [String!]
  uidNotIn: [String!]
  uidGT: String
  uidGTE: String
  uidLT: String
  uidLTE: String
  uidContains: String
  uidHasPrefix: String
  uidHasSuffix: String
  uidIsNil: Boolean
  uidNotNil: Boolean
  uidEqualFold: String
  uidContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "saas/gen/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
type OauthConnection implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  provider: String
  clientID: String
  clientSecret: String
  scopes: String
  redirectURL: String
  dashboardLink: String
  note: String
  status: Boolean
}
"""
A connection to a list of items.
"""
type OauthConnectionConnection {
  """
  A list of edges.
  """
  edges: [OauthConnectionEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OauthConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: OauthConnection
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for OauthConnection connections
"""
input OauthConnectionOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order OauthConnections.
  """
  field: OauthConnectionOrderField!
}
"""
Properties by which OauthConnection connections can be ordered.
"""
enum OauthConnectionOrderField {
  CREATED_AT
}
"""
OauthConnectionWhereInput is used for filtering OauthConnection objects.
Input was generated by ent.
"""
input OauthConnectionWhereInput {
  not: OauthConnectionWhereInput
  and: [OauthConnectionWhereInput!]
  or: [OauthConnectionWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  provider field predicates
  """
  provider: String
  providerNEQ: String
  providerIn: [String!]
  providerNotIn: [String!]
  providerGT: String
  providerGTE: String
  providerLT: String
  providerLTE: String
  providerContains: String
  providerHasPrefix: String
  providerHasSuffix: String
  providerIsNil: Boolean
  providerNotNil: Boolean
  providerEqualFold: String
  providerContainsFold: String
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDIsNil: Boolean
  clientIDNotNil: Boolean
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  client_secret field predicates
  """
  clientSecret: String
  clientSecretNEQ: String
  clientSecretIn: [String!]
  clientSecretNotIn: [String!]
  clientSecretGT: String
  clientSecretGTE: String
  clientSecretLT: String
  clientSecretLTE: String
  clientSecretContains: String
  clientSecretHasPrefix: String
  clientSecretHasSuffix: String
  clientSecretIsNil: Boolean
  clientSecretNotNil: Boolean
  clientSecretEqualFold: String
  clientSecretContainsFold: String
  """
  scopes field predicates
  """
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesIsNil: Boolean
  scopesNotNil: Boolean
  scopesEqualFold: String
  scopesContainsFold: String
  """
  redirect_url field predicates
  """
  redirectURL: String
  redirectURLNEQ: String
  redirectURLIn: [String!]
  redirectURLNotIn: [String!]
  redirectURLGT: String
  redirectURLGTE: String
  redirectURLLT: String
  redirectURLLTE: String
  redirectURLContains: String
  redirectURLHasPrefix: String
  redirectURLHasSuffix: String
  redirectURLIsNil: Boolean
  redirectURLNotNil: Boolean
  redirectURLEqualFold: String
  redirectURLContainsFold: String
  """
  dashboard_link field predicates
  """
  dashboardLink: String
  dashboardLinkNEQ: String
  dashboardLinkIn: [String!]
  dashboardLinkNotIn: [String!]
  dashboardLinkGT: String
  dashboardLinkGTE: String
  dashboardLinkLT: String
  dashboardLinkLTE: String
  dashboardLinkContains: String
  dashboardLinkHasPrefix: String
  dashboardLinkHasSuffix: String
  dashboardLinkIsNil: Boolean
  dashboardLinkNotNil: Boolean
  dashboardLinkEqualFold: String
  dashboardLinkContainsFold: String
  """
  note field predicates
  """
  note: String
  noteNEQ: String
  noteIn: [String!]
  noteNotIn: [String!]
  noteGT: String
  noteGTE: String
  noteLT: String
  noteLTE: String
  noteContains: String
  noteHasPrefix: String
  noteHasSuffix: String
  noteIsNil: Boolean
  noteNotNil: Boolean
  noteEqualFold: String
  noteContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Post implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  slug: String
  postStatusID: ID
  postTypeID: ID
  primaryCategoryID: ID
  headline: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  custom: Map
  postStatus: PostStatus
  postType: PostType
  primaryCategory: PostCategory
  postTags: [PostTag!]
}
type PostCategory implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  parentID: ID
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  posts: [Post!]
  parent: PostCategory
  children: [PostCategory!]
}
"""
A connection to a list of items.
"""
type PostCategoryConnection {
  """
  A list of edges.
  """
  edges: [PostCategoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: PostCategory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostCategory connections
"""
input PostCategoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostCategories.
  """
  field: PostCategoryOrderField!
}
"""
Properties by which PostCategory connections can be ordered.
"""
enum PostCategoryOrderField {
  CREATED_AT
}
"""
PostCategoryWhereInput is used for filtering PostCategory objects.
Input was generated by ent.
"""
input PostCategoryWhereInput {
  not: PostCategoryWhereInput
  and: [PostCategoryWhereInput!]
  or: [PostCategoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  parent_id field predicates
  """
  parentID: ID
  parentIDNEQ: ID
  parentIDIn: [ID!]
  parentIDNotIn: [ID!]
  parentIDGT: ID
  parentIDGTE: ID
  parentIDLT: ID
  parentIDLTE: ID
  parentIDContains: ID
  parentIDHasPrefix: ID
  parentIDHasSuffix: ID
  parentIDIsNil: Boolean
  parentIDNotNil: Boolean
  parentIDEqualFold: ID
  parentIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
  """
  parent edge predicates
  """
  hasParent: Boolean
  hasParentWith: [PostCategoryWhereInput!]
  """
  children edge predicates
  """
  hasChildren: Boolean
  hasChildrenWith: [PostCategoryWhereInput!]
}
"""
A connection to a list of items.
"""
type PostConnection {
  """
  A list of edges.
  """
  edges: [PostEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostEdge {
  """
  The item at the end of the edge.
  """
  node: Post
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Post connections
"""
input PostOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Posts.
  """
  field: PostOrderField!
}
"""
Properties by which Post connections can be ordered.
"""
enum PostOrderField {
  CREATED_AT
}
type PostStatus implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  slug: String
  status: Boolean
  postTypeID: ID
  postType: PostType
  posts: [Post!]
}
"""
A connection to a list of items.
"""
type PostStatusConnection {
  """
  A list of edges.
  """
  edges: [PostStatusEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostStatusEdge {
  """
  The item at the end of the edge.
  """
  node: PostStatus
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostStatus connections
"""
input PostStatusOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostStatusSlice.
  """
  field: PostStatusOrderField!
}
"""
Properties by which PostStatus connections can be ordered.
"""
enum PostStatusOrderField {
  CREATED_AT
  NAME
  STATUS
  POST_TYPE_NAME
}
"""
PostStatusWhereInput is used for filtering PostStatus objects.
Input was generated by ent.
"""
input PostStatusWhereInput {
  not: PostStatusWhereInput
  and: [PostStatusWhereInput!]
  or: [PostStatusWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
  """
  post_type_id field predicates
  """
  postTypeID: ID
  postTypeIDNEQ: ID
  postTypeIDIn: [ID!]
  postTypeIDNotIn: [ID!]
  postTypeIDGT: ID
  postTypeIDGTE: ID
  postTypeIDLT: ID
  postTypeIDLTE: ID
  postTypeIDContains: ID
  postTypeIDHasPrefix: ID
  postTypeIDHasSuffix: ID
  postTypeIDIsNil: Boolean
  postTypeIDNotNil: Boolean
  postTypeIDEqualFold: ID
  postTypeIDContainsFold: ID
  """
  post_type edge predicates
  """
  hasPostType: Boolean
  hasPostTypeWith: [PostTypeWhereInput!]
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
}
type PostTag implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  slug: String
  status: String
  excerpt: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  posts: [Post!]
}
"""
A connection to a list of items.
"""
type PostTagConnection {
  """
  A list of edges.
  """
  edges: [PostTagEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostTagEdge {
  """
  The item at the end of the edge.
  """
  node: PostTag
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostTag connections
"""
input PostTagOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostTags.
  """
  field: PostTagOrderField!
}
"""
Properties by which PostTag connections can be ordered.
"""
enum PostTagOrderField {
  CREATED_AT
}
"""
PostTagWhereInput is used for filtering PostTag objects.
Input was generated by ent.
"""
input PostTagWhereInput {
  not: PostTagWhereInput
  and: [PostTagWhereInput!]
  or: [PostTagWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
}
type PostType implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  slug: String
  status: String
  excerpt: String
  content: String
  metaTitle: String
  metaDescr: String
  metaCanonicalURL: String
  metaRobots: String
  posts: [Post!]
  postStatuses: [PostStatus!]
  postTypeForms: [PostTypeForm!]
}
"""
A connection to a list of items.
"""
type PostTypeConnection {
  """
  A list of edges.
  """
  edges: [PostTypeEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostTypeEdge {
  """
  The item at the end of the edge.
  """
  node: PostType
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type PostTypeForm implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  status: Boolean
  postTypeID: ID
  body: JsonSlice
  postType: PostType
}
"""
A connection to a list of items.
"""
type PostTypeFormConnection {
  """
  A list of edges.
  """
  edges: [PostTypeFormEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PostTypeFormEdge {
  """
  The item at the end of the edge.
  """
  node: PostTypeForm
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PostTypeForm connections
"""
input PostTypeFormOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostTypeForms.
  """
  field: PostTypeFormOrderField!
}
"""
Properties by which PostTypeForm connections can be ordered.
"""
enum PostTypeFormOrderField {
  CREATED_AT
  NAME
  STATUS
  POST_TYPE_NAME
}
"""
PostTypeFormWhereInput is used for filtering PostTypeForm objects.
Input was generated by ent.
"""
input PostTypeFormWhereInput {
  not: PostTypeFormWhereInput
  and: [PostTypeFormWhereInput!]
  or: [PostTypeFormWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
  """
  post_type_id field predicates
  """
  postTypeID: ID
  postTypeIDNEQ: ID
  postTypeIDIn: [ID!]
  postTypeIDNotIn: [ID!]
  postTypeIDGT: ID
  postTypeIDGTE: ID
  postTypeIDLT: ID
  postTypeIDLTE: ID
  postTypeIDContains: ID
  postTypeIDHasPrefix: ID
  postTypeIDHasSuffix: ID
  postTypeIDIsNil: Boolean
  postTypeIDNotNil: Boolean
  postTypeIDEqualFold: ID
  postTypeIDContainsFold: ID
  """
  post_type edge predicates
  """
  hasPostType: Boolean
  hasPostTypeWith: [PostTypeWhereInput!]
}
"""
Ordering options for PostType connections
"""
input PostTypeOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PostTypes.
  """
  field: PostTypeOrderField!
}
"""
Properties by which PostType connections can be ordered.
"""
enum PostTypeOrderField {
  CREATED_AT
  NAME
  STATUS
}
"""
PostTypeWhereInput is used for filtering PostType objects.
Input was generated by ent.
"""
input PostTypeWhereInput {
  not: PostTypeWhereInput
  and: [PostTypeWhereInput!]
  or: [PostTypeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  posts edge predicates
  """
  hasPosts: Boolean
  hasPostsWith: [PostWhereInput!]
  """
  post_statuses edge predicates
  """
  hasPostStatuses: Boolean
  hasPostStatusesWith: [PostStatusWhereInput!]
  """
  post_type_forms edge predicates
  """
  hasPostTypeForms: Boolean
  hasPostTypeFormsWith: [PostTypeFormWhereInput!]
}
"""
PostWhereInput is used for filtering Post objects.
Input was generated by ent.
"""
input PostWhereInput {
  not: PostWhereInput
  and: [PostWhereInput!]
  or: [PostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  slug field predicates
  """
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugIsNil: Boolean
  slugNotNil: Boolean
  slugEqualFold: String
  slugContainsFold: String
  """
  post_status_id field predicates
  """
  postStatusID: ID
  postStatusIDNEQ: ID
  postStatusIDIn: [ID!]
  postStatusIDNotIn: [ID!]
  postStatusIDGT: ID
  postStatusIDGTE: ID
  postStatusIDLT: ID
  postStatusIDLTE: ID
  postStatusIDContains: ID
  postStatusIDHasPrefix: ID
  postStatusIDHasSuffix: ID
  postStatusIDIsNil: Boolean
  postStatusIDNotNil: Boolean
  postStatusIDEqualFold: ID
  postStatusIDContainsFold: ID
  """
  post_type_id field predicates
  """
  postTypeID: ID
  postTypeIDNEQ: ID
  postTypeIDIn: [ID!]
  postTypeIDNotIn: [ID!]
  postTypeIDGT: ID
  postTypeIDGTE: ID
  postTypeIDLT: ID
  postTypeIDLTE: ID
  postTypeIDContains: ID
  postTypeIDHasPrefix: ID
  postTypeIDHasSuffix: ID
  postTypeIDIsNil: Boolean
  postTypeIDNotNil: Boolean
  postTypeIDEqualFold: ID
  postTypeIDContainsFold: ID
  """
  primary_category_id field predicates
  """
  primaryCategoryID: ID
  primaryCategoryIDNEQ: ID
  primaryCategoryIDIn: [ID!]
  primaryCategoryIDNotIn: [ID!]
  primaryCategoryIDGT: ID
  primaryCategoryIDGTE: ID
  primaryCategoryIDLT: ID
  primaryCategoryIDLTE: ID
  primaryCategoryIDContains: ID
  primaryCategoryIDHasPrefix: ID
  primaryCategoryIDHasSuffix: ID
  primaryCategoryIDIsNil: Boolean
  primaryCategoryIDNotNil: Boolean
  primaryCategoryIDEqualFold: ID
  primaryCategoryIDContainsFold: ID
  """
  headline field predicates
  """
  headline: String
  headlineNEQ: String
  headlineIn: [String!]
  headlineNotIn: [String!]
  headlineGT: String
  headlineGTE: String
  headlineLT: String
  headlineLTE: String
  headlineContains: String
  headlineHasPrefix: String
  headlineHasSuffix: String
  headlineIsNil: Boolean
  headlineNotNil: Boolean
  headlineEqualFold: String
  headlineContainsFold: String
  """
  excerpt field predicates
  """
  excerpt: String
  excerptNEQ: String
  excerptIn: [String!]
  excerptNotIn: [String!]
  excerptGT: String
  excerptGTE: String
  excerptLT: String
  excerptLTE: String
  excerptContains: String
  excerptHasPrefix: String
  excerptHasSuffix: String
  excerptIsNil: Boolean
  excerptNotNil: Boolean
  excerptEqualFold: String
  excerptContainsFold: String
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """
  meta_title field predicates
  """
  metaTitle: String
  metaTitleNEQ: String
  metaTitleIn: [String!]
  metaTitleNotIn: [String!]
  metaTitleGT: String
  metaTitleGTE: String
  metaTitleLT: String
  metaTitleLTE: String
  metaTitleContains: String
  metaTitleHasPrefix: String
  metaTitleHasSuffix: String
  metaTitleIsNil: Boolean
  metaTitleNotNil: Boolean
  metaTitleEqualFold: String
  metaTitleContainsFold: String
  """
  meta_descr field predicates
  """
  metaDescr: String
  metaDescrNEQ: String
  metaDescrIn: [String!]
  metaDescrNotIn: [String!]
  metaDescrGT: String
  metaDescrGTE: String
  metaDescrLT: String
  metaDescrLTE: String
  metaDescrContains: String
  metaDescrHasPrefix: String
  metaDescrHasSuffix: String
  metaDescrIsNil: Boolean
  metaDescrNotNil: Boolean
  metaDescrEqualFold: String
  metaDescrContainsFold: String
  """
  meta_canonical_url field predicates
  """
  metaCanonicalURL: String
  metaCanonicalURLNEQ: String
  metaCanonicalURLIn: [String!]
  metaCanonicalURLNotIn: [String!]
  metaCanonicalURLGT: String
  metaCanonicalURLGTE: String
  metaCanonicalURLLT: String
  metaCanonicalURLLTE: String
  metaCanonicalURLContains: String
  metaCanonicalURLHasPrefix: String
  metaCanonicalURLHasSuffix: String
  metaCanonicalURLIsNil: Boolean
  metaCanonicalURLNotNil: Boolean
  metaCanonicalURLEqualFold: String
  metaCanonicalURLContainsFold: String
  """
  meta_robots field predicates
  """
  metaRobots: String
  metaRobotsNEQ: String
  metaRobotsIn: [String!]
  metaRobotsNotIn: [String!]
  metaRobotsGT: String
  metaRobotsGTE: String
  metaRobotsLT: String
  metaRobotsLTE: String
  metaRobotsContains: String
  metaRobotsHasPrefix: String
  metaRobotsHasSuffix: String
  metaRobotsIsNil: Boolean
  metaRobotsNotNil: Boolean
  metaRobotsEqualFold: String
  metaRobotsContainsFold: String
  """
  post_status edge predicates
  """
  hasPostStatus: Boolean
  hasPostStatusWith: [PostStatusWhereInput!]
  """
  post_type edge predicates
  """
  hasPostType: Boolean
  hasPostTypeWith: [PostTypeWhereInput!]
  """
  primary_category edge predicates
  """
  hasPrimaryCategory: Boolean
  hasPrimaryCategoryWith: [PostCategoryWhereInput!]
  """
  post_tags edge predicates
  """
  hasPostTags: Boolean
  hasPostTagsWith: [PostTagWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node @canApp
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]! @canApp
  apps(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Apps returned from the connection.
    """
    orderBy: [AppOrder!]

    """
    Filtering options for Apps returned from the connection.
    """
    where: AppWhereInput
  ): AppConnection! @canAdmin
  mailConns(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for MailConns returned from the connection.
    """
    orderBy: [MailConnOrder!]

    """
    Filtering options for MailConns returned from the connection.
    """
    where: MailConnWhereInput
  ): MailConnConnection! @canAdmin
  medias(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for MediaSlice returned from the connection.
    """
    orderBy: [MediaOrder!]

    """
    Filtering options for MediaSlice returned from the connection.
    """
    where: MediaWhereInput
  ): MediaConnection! @canApp
  oauthConnections(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for OauthConnections returned from the connection.
    """
    orderBy: [OauthConnectionOrder!]

    """
    Filtering options for OauthConnections returned from the connection.
    """
    where: OauthConnectionWhereInput
  ): OauthConnectionConnection! @canApp
  posts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Posts returned from the connection.
    """
    orderBy: [PostOrder!]

    """
    Filtering options for Posts returned from the connection.
    """
    where: PostWhereInput
  ): PostConnection! @canApp
  postCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostCategories returned from the connection.
    """
    orderBy: [PostCategoryOrder!]

    """
    Filtering options for PostCategories returned from the connection.
    """
    where: PostCategoryWhereInput
  ): PostCategoryConnection! @canApp
  postStatuses(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostStatusSlice returned from the connection.
    """
    orderBy: [PostStatusOrder!]

    """
    Filtering options for PostStatusSlice returned from the connection.
    """
    where: PostStatusWhereInput
  ): PostStatusConnection! @canApp
  postTags(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostTags returned from the connection.
    """
    orderBy: [PostTagOrder!]

    """
    Filtering options for PostTags returned from the connection.
    """
    where: PostTagWhereInput
  ): PostTagConnection! @canApp
  postTypes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostTypes returned from the connection.
    """
    orderBy: [PostTypeOrder!]

    """
    Filtering options for PostTypes returned from the connection.
    """
    where: PostTypeWhereInput
  ): PostTypeConnection! @canApp
  postTypeForms(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PostTypeForms returned from the connection.
    """
    orderBy: [PostTypeFormOrder!]

    """
    Filtering options for PostTypeForms returned from the connection.
    """
    where: PostTypeFormWhereInput
  ): PostTypeFormConnection! @canApp
  templs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Templs returned from the connection.
    """
    orderBy: [TemplOrder!]

    """
    Filtering options for Templs returned from the connection.
    """
    where: TemplWhereInput
  ): TemplConnection! @canAdmin
  todos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Todos returned from the connection.
    """
    orderBy: TodoOrder

    """
    Filtering options for Todos returned from the connection.
    """
    where: TodoWhereInput
  ): TodoConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: [UserOrder!]

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection! @canApp
  workspaces(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Workspaces returned from the connection.
    """
    orderBy: [WorkspaceOrder!]

    """
    Filtering options for Workspaces returned from the connection.
    """
    where: WorkspaceWhereInput
  ): WorkspaceConnection! @canApp
  workspaceInvites(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for WorkspaceInvites returned from the connection.
    """
    orderBy: [WorkspaceInviteOrder!]

    """
    Filtering options for WorkspaceInvites returned from the connection.
    """
    where: WorkspaceInviteWhereInput
  ): WorkspaceInviteConnection! @canApp
  workspaceUsers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for WorkspaceUsers returned from the connection.
    """
    orderBy: [WorkspaceUserOrder!]

    """
    Filtering options for WorkspaceUsers returned from the connection.
    """
    where: WorkspaceUserWhereInput
  ): WorkspaceUserConnection! @canApp
}
type Templ implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  body: String
  compiled: String
  status: Boolean
}
"""
A connection to a list of items.
"""
type TemplConnection {
  """
  A list of edges.
  """
  edges: [TemplEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TemplEdge {
  """
  The item at the end of the edge.
  """
  node: Templ
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Templ connections
"""
input TemplOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Templs.
  """
  field: TemplOrderField!
}
"""
Properties by which Templ connections can be ordered.
"""
enum TemplOrderField {
  CREATED_AT
}
"""
TemplWhereInput is used for filtering Templ objects.
Input was generated by ent.
"""
input TemplWhereInput {
  not: TemplWhereInput
  and: [TemplWhereInput!]
  or: [TemplWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  body field predicates
  """
  body: String
  bodyNEQ: String
  bodyIn: [String!]
  bodyNotIn: [String!]
  bodyGT: String
  bodyGTE: String
  bodyLT: String
  bodyLTE: String
  bodyContains: String
  bodyHasPrefix: String
  bodyHasSuffix: String
  bodyIsNil: Boolean
  bodyNotNil: Boolean
  bodyEqualFold: String
  bodyContainsFold: String
  """
  compiled field predicates
  """
  compiled: String
  compiledNEQ: String
  compiledIn: [String!]
  compiledNotIn: [String!]
  compiledGT: String
  compiledGTE: String
  compiledLT: String
  compiledLTE: String
  compiledContains: String
  compiledHasPrefix: String
  compiledHasSuffix: String
  compiledIsNil: Boolean
  compiledNotNil: Boolean
  compiledEqualFold: String
  compiledContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
}
type Todo implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  text: String!
  status: TodoStatus!
  priority: Int!
  children: [Todo!]
  parent: Todo
}
"""
A connection to a list of items.
"""
type TodoConnection {
  """
  A list of edges.
  """
  edges: [TodoEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TodoEdge {
  """
  The item at the end of the edge.
  """
  node: Todo
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Todo connections
"""
input TodoOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Todos.
  """
  field: TodoOrderField!
}
"""
Properties by which Todo connections can be ordered.
"""
enum TodoOrderField {
  CREATED_AT
  TEXT
  STATUS
  PRIORITY
}
"""
TodoStatus is enum for the field status
"""
enum TodoStatus @goModel(model: "saas/gen/ent/todo.Status") {
  IN_PROGRESS
  COMPLETED
}
"""
TodoWhereInput is used for filtering Todo objects.
Input was generated by ent.
"""
input TodoWhereInput {
  not: TodoWhereInput
  and: [TodoWhereInput!]
  or: [TodoWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  text field predicates
  """
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
  """
  status field predicates
  """
  status: TodoStatus
  statusNEQ: TodoStatus
  statusIn: [TodoStatus!]
  statusNotIn: [TodoStatus!]
  """
  priority field predicates
  """
  priority: Int
  priorityNEQ: Int
  priorityIn: [Int!]
  priorityNotIn: [Int!]
  priorityGT: Int
  priorityGTE: Int
  priorityLT: Int
  priorityLTE: Int
  """
  children edge predicates
  """
  hasChildren: Boolean
  hasChildrenWith: [TodoWhereInput!]
  """
  parent edge predicates
  """
  hasParent: Boolean
  hasParentWith: [TodoWhereInput!]
}
"""
UpdateAppInput is used for update App object.
Input was generated by ent.
"""
input UpdateAppInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  name: String
  clearName: Boolean
  copyright: String
  clearCopyright: Boolean
  email: String
  clearEmail: Boolean
  address: String
  clearAddress: Boolean
  socialTw: String
  clearSocialTw: Boolean
  socialFb: String
  clearSocialFb: Boolean
  socialIn: String
  clearSocialIn: Boolean
  logoURL: String
  clearLogoURL: Boolean
  siteURL: String
  clearSiteURL: Boolean
  authEmailVerify: Boolean
  clearAuthEmailVerify: Boolean
  oauthSigninCanSignup: Boolean
  clearOauthSigninCanSignup: Boolean
  authEnablePasswordLogin: Boolean
  clearAuthEnablePasswordLogin: Boolean
  adminUserID: String
  clearAdminUserID: Boolean
  defaultMailConnID: ID
  clearDefaultMailConn: Boolean
  mailLayoutTemplID: ID
  clearMailLayoutTempl: Boolean
  wsapceInviteTemplID: ID
  clearWsapceInviteTempl: Boolean
  wsapceSuccessTemplID: ID
  clearWsapceSuccessTempl: Boolean
  authFpTemplID: ID
  clearAuthFpTempl: Boolean
  authWelcomeEmailTemplID: ID
  clearAuthWelcomeEmailTempl: Boolean
  authVerificationTemplID: ID
  clearAuthVerificationTempl: Boolean
}
"""
UpdateMailConnInput is used for update MailConn object.
Input was generated by ent.
"""
input UpdateMailConnInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  host: String
  clearHost: Boolean
  port: Int
  clearPort: Boolean
  username: String
  clearUsername: Boolean
  password: String
  clearPassword: Boolean
  encryption: Int
  clearEncryption: Boolean
  fromName: String
  clearFromName: Boolean
  fromEmail: String
  clearFromEmail: Boolean
  status: Boolean
  clearStatus: Boolean
}
"""
UpdateOauthConnectionInput is used for update OauthConnection object.
Input was generated by ent.
"""
input UpdateOauthConnectionInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  provider: String
  clearProvider: Boolean
  clientID: String
  clearClientID: Boolean
  clientSecret: String
  clearClientSecret: Boolean
  scopes: String
  clearScopes: Boolean
  redirectURL: String
  clearRedirectURL: Boolean
  dashboardLink: String
  clearDashboardLink: Boolean
  note: String
  clearNote: Boolean
  status: Boolean
  clearStatus: Boolean
}
"""
UpdatePostCategoryInput is used for update PostCategory object.
Input was generated by ent.
"""
input UpdatePostCategoryInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: String
  clearStatus: Boolean
  excerpt: String
  clearExcerpt: Boolean
  content: String
  clearContent: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
  addPostIDs: [ID!]
  removePostIDs: [ID!]
  clearPosts: Boolean
  parentID: ID
  clearParent: Boolean
  addChildIDs: [ID!]
  removeChildIDs: [ID!]
  clearChildren: Boolean
}
"""
UpdatePostInput is used for update Post object.
Input was generated by ent.
"""
input UpdatePostInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  headline: String
  clearHeadline: Boolean
  excerpt: String
  clearExcerpt: Boolean
  content: String
  clearContent: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
  custom: Map
  clearCustom: Boolean
  postStatusID: ID
  clearPostStatus: Boolean
  postTypeID: ID
  clearPostType: Boolean
  primaryCategoryID: ID
  clearPrimaryCategory: Boolean
  addPostTagIDs: [ID!]
  removePostTagIDs: [ID!]
  clearPostTags: Boolean
}
"""
UpdatePostStatusInput is used for update PostStatus object.
Input was generated by ent.
"""
input UpdatePostStatusInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: Boolean
  clearStatus: Boolean
  postTypeID: ID
  clearPostType: Boolean
}
"""
UpdatePostTagInput is used for update PostTag object.
Input was generated by ent.
"""
input UpdatePostTagInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: String
  clearStatus: Boolean
  excerpt: String
  clearExcerpt: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
  addPostIDs: [ID!]
  removePostIDs: [ID!]
  clearPosts: Boolean
}
"""
UpdatePostTypeFormInput is used for update PostTypeForm object.
Input was generated by ent.
"""
input UpdatePostTypeFormInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  status: Boolean
  clearStatus: Boolean
  body: JsonSlice
  appendBody: JsonSlice
  clearBody: Boolean
  postTypeID: ID
  clearPostType: Boolean
}
"""
UpdatePostTypeInput is used for update PostType object.
Input was generated by ent.
"""
input UpdatePostTypeInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  slug: String
  clearSlug: Boolean
  status: String
  clearStatus: Boolean
  excerpt: String
  clearExcerpt: Boolean
  content: String
  clearContent: Boolean
  metaTitle: String
  clearMetaTitle: Boolean
  metaDescr: String
  clearMetaDescr: Boolean
  metaCanonicalURL: String
  clearMetaCanonicalURL: Boolean
  metaRobots: String
  clearMetaRobots: Boolean
}
"""
UpdateTemplInput is used for update Templ object.
Input was generated by ent.
"""
input UpdateTemplInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  body: String
  clearBody: Boolean
  compiled: String
  clearCompiled: Boolean
  status: Boolean
  clearStatus: Boolean
}
"""
UpdateTodoInput is used for update Todo object.
Input was generated by ent.
"""
input UpdateTodoInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  text: String
  status: TodoStatus
  priority: Int
  addChildIDs: [ID!]
  removeChildIDs: [ID!]
  clearChildren: Boolean
  parentID: ID
  clearParent: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  email: String
  phone: String
  clearPhone: Boolean
  firstName: String
  clearFirstName: Boolean
  lastName: String
  clearLastName: Boolean
  company: String
  clearCompany: Boolean
  locale: String
  clearLocale: Boolean
  roleID: String
  clearRoleID: Boolean
  status: Boolean
  clearStatus: Boolean
  password: String
  clearPassword: Boolean
  secret: String
  clearSecret: Boolean
  apiKey: String
  clearAPIKey: Boolean
  welcomeEmailSent: Boolean
  clearWelcomeEmailSent: Boolean
  canAdmin: Boolean
  clearCanAdmin: Boolean
  addSessionIDs: [ID!]
  removeSessionIDs: [ID!]
  clearSessions: Boolean
  addWorkspaceIDs: [ID!]
  removeWorkspaceIDs: [ID!]
  clearWorkspaces: Boolean
}
"""
UpdateWorkspaceInput is used for update Workspace object.
Input was generated by ent.
"""
input UpdateWorkspaceInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  name: String
  clearName: Boolean
  isPersonal: Boolean
  clearIsPersonal: Boolean
  userID: String
  clearUserID: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addWorkspaceInviteIDs: [ID!]
  removeWorkspaceInviteIDs: [ID!]
  clearWorkspaceInvites: Boolean
}
"""
UpdateWorkspaceInviteInput is used for update WorkspaceInvite object.
Input was generated by ent.
"""
input UpdateWorkspaceInviteInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  email: String
  clearEmail: Boolean
  role: String
  clearRole: Boolean
  workspaceID: ID
  clearWorkspace: Boolean
}
"""
UpdateWorkspaceUserInput is used for update WorkspaceUser object.
Input was generated by ent.
"""
input UpdateWorkspaceUserInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  appID: String
  clearAppID: Boolean
  role: String
  clearRole: Boolean
  userID: ID
  workspaceID: ID
}
type User implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  email: String!
  phone: String
  firstName: String
  lastName: String
  company: String
  locale: String
  roleID: String
  status: Boolean
  apiKey: String
  welcomeEmailSent: Boolean
  canAdmin: Boolean
  workspaces: [Workspace!]
  workspaceUsers: [WorkspaceUser!]
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for User connections
"""
input UserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Users.
  """
  field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
  CREATED_AT
  EMAIL
  WELCOME_EMAIL_SENT
  CAN_ADMIN
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone field predicates
  """
  phone: String
  phoneNEQ: String
  phoneIn: [String!]
  phoneNotIn: [String!]
  phoneGT: String
  phoneGTE: String
  phoneLT: String
  phoneLTE: String
  phoneContains: String
  phoneHasPrefix: String
  phoneHasSuffix: String
  phoneIsNil: Boolean
  phoneNotNil: Boolean
  phoneEqualFold: String
  phoneContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameIsNil: Boolean
  firstNameNotNil: Boolean
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameIsNil: Boolean
  lastNameNotNil: Boolean
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  company field predicates
  """
  company: String
  companyNEQ: String
  companyIn: [String!]
  companyNotIn: [String!]
  companyGT: String
  companyGTE: String
  companyLT: String
  companyLTE: String
  companyContains: String
  companyHasPrefix: String
  companyHasSuffix: String
  companyIsNil: Boolean
  companyNotNil: Boolean
  companyEqualFold: String
  companyContainsFold: String
  """
  locale field predicates
  """
  locale: String
  localeNEQ: String
  localeIn: [String!]
  localeNotIn: [String!]
  localeGT: String
  localeGTE: String
  localeLT: String
  localeLTE: String
  localeContains: String
  localeHasPrefix: String
  localeHasSuffix: String
  localeIsNil: Boolean
  localeNotNil: Boolean
  localeEqualFold: String
  localeContainsFold: String
  """
  role_id field predicates
  """
  roleID: String
  roleIDNEQ: String
  roleIDIn: [String!]
  roleIDNotIn: [String!]
  roleIDGT: String
  roleIDGTE: String
  roleIDLT: String
  roleIDLTE: String
  roleIDContains: String
  roleIDHasPrefix: String
  roleIDHasSuffix: String
  roleIDIsNil: Boolean
  roleIDNotNil: Boolean
  roleIDEqualFold: String
  roleIDContainsFold: String
  """
  status field predicates
  """
  status: Boolean
  statusNEQ: Boolean
  statusIsNil: Boolean
  statusNotNil: Boolean
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyIsNil: Boolean
  apiKeyNotNil: Boolean
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  welcome_email_sent field predicates
  """
  welcomeEmailSent: Boolean
  welcomeEmailSentNEQ: Boolean
  welcomeEmailSentIsNil: Boolean
  welcomeEmailSentNotNil: Boolean
  """
  can_admin field predicates
  """
  canAdmin: Boolean
  canAdminNEQ: Boolean
  canAdminIsNil: Boolean
  canAdminNotNil: Boolean
  """
  workspaces edge predicates
  """
  hasWorkspaces: Boolean
  hasWorkspacesWith: [WorkspaceWhereInput!]
  """
  workspace_users edge predicates
  """
  hasWorkspaceUsers: Boolean
  hasWorkspaceUsersWith: [WorkspaceUserWhereInput!]
}
type Workspace implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  name: String
  isPersonal: Boolean
  userID: String
  users: [User!]
  workspaceInvites: [WorkspaceInvite!]
  workspaceUsers: [WorkspaceUser!]
}
"""
A connection to a list of items.
"""
type WorkspaceConnection {
  """
  A list of edges.
  """
  edges: [WorkspaceEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WorkspaceEdge {
  """
  The item at the end of the edge.
  """
  node: Workspace
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type WorkspaceInvite implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  workspaceID: ID
  email: String
  role: String
  workspace: Workspace
}
"""
A connection to a list of items.
"""
type WorkspaceInviteConnection {
  """
  A list of edges.
  """
  edges: [WorkspaceInviteEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WorkspaceInviteEdge {
  """
  The item at the end of the edge.
  """
  node: WorkspaceInvite
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for WorkspaceInvite connections
"""
input WorkspaceInviteOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order WorkspaceInvites.
  """
  field: WorkspaceInviteOrderField!
}
"""
Properties by which WorkspaceInvite connections can be ordered.
"""
enum WorkspaceInviteOrderField {
  CREATED_AT
}
"""
WorkspaceInviteWhereInput is used for filtering WorkspaceInvite objects.
Input was generated by ent.
"""
input WorkspaceInviteWhereInput {
  not: WorkspaceInviteWhereInput
  and: [WorkspaceInviteWhereInput!]
  or: [WorkspaceInviteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  workspace_id field predicates
  """
  workspaceID: ID
  workspaceIDNEQ: ID
  workspaceIDIn: [ID!]
  workspaceIDNotIn: [ID!]
  workspaceIDGT: ID
  workspaceIDGTE: ID
  workspaceIDLT: ID
  workspaceIDLTE: ID
  workspaceIDContains: ID
  workspaceIDHasPrefix: ID
  workspaceIDHasSuffix: ID
  workspaceIDIsNil: Boolean
  workspaceIDNotNil: Boolean
  workspaceIDEqualFold: ID
  workspaceIDContainsFold: ID
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  role field predicates
  """
  role: String
  roleNEQ: String
  roleIn: [String!]
  roleNotIn: [String!]
  roleGT: String
  roleGTE: String
  roleLT: String
  roleLTE: String
  roleContains: String
  roleHasPrefix: String
  roleHasSuffix: String
  roleIsNil: Boolean
  roleNotNil: Boolean
  roleEqualFold: String
  roleContainsFold: String
  """
  workspace edge predicates
  """
  hasWorkspace: Boolean
  hasWorkspaceWith: [WorkspaceWhereInput!]
}
"""
Ordering options for Workspace connections
"""
input WorkspaceOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Workspaces.
  """
  field: WorkspaceOrderField!
}
"""
Properties by which Workspace connections can be ordered.
"""
enum WorkspaceOrderField {
  CREATED_AT
  NAME
}
type WorkspaceUser implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  appID: String
  workspaceID: ID!
  userID: ID!
  role: String
  user: User!
  workspace: Workspace!
}
"""
A connection to a list of items.
"""
type WorkspaceUserConnection {
  """
  A list of edges.
  """
  edges: [WorkspaceUserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WorkspaceUserEdge {
  """
  The item at the end of the edge.
  """
  node: WorkspaceUser
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for WorkspaceUser connections
"""
input WorkspaceUserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order WorkspaceUsers.
  """
  field: WorkspaceUserOrderField!
}
"""
Properties by which WorkspaceUser connections can be ordered.
"""
enum WorkspaceUserOrderField {
  CREATED_AT
  USER_EMAIL
  WORKSPACE_NAME
}
"""
WorkspaceUserWhereInput is used for filtering WorkspaceUser objects.
Input was generated by ent.
"""
input WorkspaceUserWhereInput {
  not: WorkspaceUserWhereInput
  and: [WorkspaceUserWhereInput!]
  or: [WorkspaceUserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  role field predicates
  """
  role: String
  roleNEQ: String
  roleIn: [String!]
  roleNotIn: [String!]
  roleGT: String
  roleGTE: String
  roleLT: String
  roleLTE: String
  roleContains: String
  roleHasPrefix: String
  roleHasSuffix: String
  roleIsNil: Boolean
  roleNotNil: Boolean
  roleEqualFold: String
  roleContainsFold: String
}
"""
WorkspaceWhereInput is used for filtering Workspace objects.
Input was generated by ent.
"""
input WorkspaceWhereInput {
  not: WorkspaceWhereInput
  and: [WorkspaceWhereInput!]
  or: [WorkspaceWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  app_id field predicates
  """
  appID: String
  appIDNEQ: String
  appIDIn: [String!]
  appIDNotIn: [String!]
  appIDGT: String
  appIDGTE: String
  appIDLT: String
  appIDLTE: String
  appIDContains: String
  appIDHasPrefix: String
  appIDHasSuffix: String
  appIDIsNil: Boolean
  appIDNotNil: Boolean
  appIDEqualFold: String
  appIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  is_personal field predicates
  """
  isPersonal: Boolean
  isPersonalNEQ: Boolean
  isPersonalIsNil: Boolean
  isPersonalNotNil: Boolean
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  userIDEqualFold: String
  userIDContainsFold: String
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  workspace_invites edge predicates
  """
  hasWorkspaceInvites: Boolean
  hasWorkspaceInvitesWith: [WorkspaceInviteWhereInput!]
  """
  workspace_users edge predicates
  """
  hasWorkspaceUsers: Boolean
  hasWorkspaceUsersWith: [WorkspaceUserWhereInput!]
}
